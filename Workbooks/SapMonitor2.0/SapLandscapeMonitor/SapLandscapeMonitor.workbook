{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "dacc479e-f79c-4fba-91e0-3ec2d1da7023",
            "version": "KqlParameterItem/1.0",
            "name": "AmsResource",
            "type": 5,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "57071f1a-d4cd-4c11-aeed-7f561216d939",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "defaultValue": "value::1"
          },
          {
            "id": "02302b6e-3f02-4dda-99fd-278e0fe4ef06",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "query": "Resources\r\n| summarize by subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = subscriptionId == '{AmsResource:subscription}'",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "001d5a8b-af43-46c8-8859-4fe460fc5bc8",
            "version": "KqlParameterItem/1.0",
            "name": "ProvidersList",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{AmsResource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2022-11-01-preview\"},{\"key\":\"pageLimit\",\"value\":\"1000\"}],\"batchDisabled\":false,\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          },
          {
            "id": "5933ca08-61e2-4abf-a629-2c19d5ed7308",
            "version": "KqlParameterItem/1.0",
            "name": "Config",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{AmsResource}/sapLandscapeMonitor/default\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2022-11-01-preview\"}],\"batchDisabled\":false,\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          }
        ],
        "style": "pills",
        "queryType": 12
      },
      "name": "BasicParameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "329dc633-57d2-4050-aacf-36fba40d4cf1",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time range",
                  "type": 4,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ]
                  },
                  "value": {
                    "durationMs": 604800000
                  }
                },
                {
                  "id": "f02e7913-5075-41ca-9135-5cd609d7c19c",
                  "version": "KqlParameterItem/1.0",
                  "name": "Alerts",
                  "type": 1,
                  "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime {TimeRange}\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend Description=tostring(properties.essentials.description)\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n    | extend ProviderName=parse_json(tags)[\"profile-id\"]\r\n    | where workspace =~ '{Workspace}'\r\n    | project AlertRule=tolower(id), ProviderName) on AlertRule\r\n| extend FiredTime=format_datetime(StartTime, 'MM/dd/yy, hh:mm tt')\r\n| where not(isnull(ProviderName))\r\n| order by Severity asc, State, StartTime\r\n| project Output = strcat(ProviderName, \"@\", Severity)\r\n| limit 100",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 1
                },
                {
                  "id": "2a88ec2e-2868-4e10-a0de-9e9f0945ec05",
                  "version": "KqlParameterItem/1.0",
                  "name": "SelectedGroup",
                  "type": 1,
                  "isHiddenWhenLocked": true
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "GroupParameters"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "nav",
              "links": [
                {
                  "id": "ca3bb28d-4aa4-4861-bca9-4ef5ce3ab2ed",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "Create or edit groups",
                  "style": "link",
                  "linkIsContextBlade": true,
                  "bladeOpenContext": {
                    "bladeName": "SidGroups.ReactView",
                    "extensionName": "Microsoft_Azure_WorkloadMonitor",
                    "bladeParameters": [
                      {
                        "name": "resourceId",
                        "source": "parameter",
                        "value": "AmsResource"
                      }
                    ]
                  }
                }
              ]
            },
            "name": "CreateEditGroupsLink"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "print providersList = parse_json(base64_decode_tostring('{ProvidersList:base64}'))\r\n| mv-expand provider = providersList.value\r\n| where provider.properties.provisioningState == \"Succeeded\"\r\n| extend sidValue = iff(isnotnull(provider.properties.providerSettings.sapSid),\r\nprovider.properties.providerSettings.sapSid, provider.properties.providerSettings.sid)\r\n| extend ProviderType = provider.properties.providerSettings.providerType\r\n| where isnotnull(sidValue)\r\n| project id=provider.id, Name=provider.name, ProviderType, SID=tostring(sidValue)\r\n| mv-apply group=parse_json('{Config}').properties.grouping.landscape on\r\n(\r\n    extend idx=array_index_of(group.topSid, SID)\r\n)\r\n| where idx >= 0\r\n| project ProviderName=tostring(Name), SID=tostring(SID), GroupName=tostring(group.name)\r\n| join kind = inner (\r\n    print alerts = '{Alerts}'\r\n    | project alert = extract_all(@\"([a-zA-Z0-9-]+@Sev[0-4])\", alerts)\r\n    | mv-expand alert\r\n    | extend items = split(alert, \"@\")\r\n    | project ProviderName = tostring(items[0]), Severity = tostring(items[1])\r\n) on ProviderName\r\n| project-away ProviderName1\r\n| summarize AlertCount = count(), Sev1Count = countif(Severity == \"Sev1\") by GroupName\r\n| extend AlertStatus = strcat(AlertCount, \" alerts\")\r\n| extend Sev1Status = strcat(Sev1Count, \"/\", AlertCount, \" with Sev1\")\r\n| join kind = rightouter (\r\n    print config = parse_json('{Config}')\r\n    | mv-expand group = config.properties.grouping.landscape\r\n    | project GroupName=tostring(group.name), DefaultAlertStatus=\"0 alerts\", DefaultSev1Status=\"0 with Sev1\"\r\n) on GroupName\r\n| extend AlertText = iff(AlertStatus != \"\", AlertStatus, DefaultAlertStatus)\r\n| extend Sev1Text = iff(Sev1Status != \"\", Sev1Status, DefaultSev1Status)\r\n| project Group=GroupName1, AlertText, Sev1Text, AlertCount=iff(isnotnull(AlertCount), AlertCount, 0), Sev1Count=iff(isnotnull(Sev1Count), Sev1Count, 0)",
              "size": 3,
              "exportFieldName": "SelectedGroup",
              "exportParameterName": "Group",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Group",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "AlertText",
                  "formatter": 1
                },
                "secondaryContent": {
                  "columnMatch": "Sev1Text",
                  "formatter": 1
                },
                "showBorder": true,
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "name": "GroupTiles",
            "styleSettings": {
              "margin": "0px 0px 50px 0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "print providersList = parse_json(base64_decode_tostring('{ProvidersList:base64}'))\r\n| mv-expand provider = providersList.value\r\n| where provider.properties.provisioningState == \"Succeeded\"\r\n| extend sidValue = iff(isnotnull(provider.properties.providerSettings.sapSid),\r\nprovider.properties.providerSettings.sapSid, provider.properties.providerSettings.sid)\r\n| extend ProviderType = provider.properties.providerSettings.providerType\r\n| where isnotnull(sidValue)\r\n| project id=provider.id, Name=provider.name, ProviderType, SID=tostring(sidValue)\r\n| mv-apply group=parse_json('{Config}').properties.grouping.landscape on\r\n(\r\n    extend idx=array_index_of(group.topSid, SID)\r\n)\r\n| where idx >= 0\r\n| extend ProviderCategory = iff(ProviderType in (\"SapHana\", \"Db2\", \"MsSqlServer\"), \"Database\", iff(ProviderType == \"SapNetWeaver\", \"SAPNetWeaver\",\r\niff(ProviderType == \"PrometheusHaCluster\", \"PacemakerCluster\", \"OS\")))\r\n| project ProviderID=id, ProviderName=tostring(Name), ProviderCategory, SID=tostring(SID), GroupName=tostring(group.name)\r\n| join kind = inner (\r\n    print alerts = '{Alerts}'\r\n    | project alert = extract_all(@\"([a-zA-Z0-9-]+@Sev[0-4])\", alerts)\r\n    | mv-expand alert\r\n    | extend items = split(alert, \"@\")\r\n    | project ProviderName = tostring(items[0]), Severity = tostring(items[1])\r\n) on ProviderName\r\n| project-away ProviderName1\r\n| summarize AlertsCount = count(), Sev1Count = countif(Severity == \"Sev1\") by GroupName, SID, ProviderCategory\r\n| extend SAP = iff(ProviderCategory == \"SAP\", strcat(Sev1Count, \"/\", AlertsCount, \" alerts with Sev1\"), \"\")\r\n| extend Database = iff(ProviderCategory == \"Database\", strcat(Sev1Count, \"/\", AlertsCount, \" alerts with Sev1\"), \"\")\r\n| extend PacemakerCluster = iff(ProviderCategory == \"PacemakerCluster\", strcat(Sev1Count, \"/\", AlertsCount, \" alerts with Sev1\"), \"\")\r\n| extend OS = iff(ProviderCategory == \"OS\", strcat(Sev1Count, \"/\", AlertsCount, \" alerts with Sev1\"), \"\")\r\n| project-away AlertsCount, Sev1Count, ProviderCategory, GroupName\r\n| join kind = rightouter (\r\n    print config = parse_json('{Config}')\r\n    | mv-expand group = config.properties.grouping.landscape\r\n    | mv-apply SID = group.topSid on\r\n    (\r\n        extend Group = tostring(group.name)\r\n    )\r\n    | project Group, SID = tostring(SID)\r\n) on SID\r\n| project-away SID\r\n| project Group, SID = SID1, SAP, Database, PacemakerCluster, OS",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Group",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SID",
                    "formatter": 5
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Group"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "SID"
                }
              }
            },
            "customWidth": "80",
            "name": "AlertTree",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<h4>Alerts</h4>"
            },
            "name": "AlertsDetailText"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "parameters": [
                {
                  "id": "0197fa16-088d-4f74-a241-e409887054dd",
                  "version": "KqlParameterItem/1.0",
                  "name": "GroupFilter",
                  "label": "Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"{Config}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties.grouping.landscape[*].name\",\"columns\":[]}}]}",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 8,
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "9d6522df-1128-455e-80bf-7e1bc1975216",
                  "version": "KqlParameterItem/1.0",
                  "name": "SIDFilter",
                  "label": "SID",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "print config = parse_json('{Config}')\r\n| mv-expand group = config.properties.grouping.landscape\r\n| mv-expand SID = group.topSid\r\n| project tostring(SID)\r\n| distinct SID\r\n| sort by SID asc\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "db4ef769-f1e7-4f00-8353-8f780e98208d",
                  "version": "KqlParameterItem/1.0",
                  "name": "CategoryFilter",
                  "label": "Category",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\"SAP\", \"Database\", \"PacemakerCluster\", \"OS\"]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "b9f53c73-89eb-417c-a009-1b50b45f1691",
                  "version": "KqlParameterItem/1.0",
                  "name": "SeverityFilter",
                  "label": "Severity",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "jsonData": "[\"Sev0\", \"Sev1\", \"Sev2\", \"Sev3\", \"Sev4\"]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "FilterParameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime {TimeRange}\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend Description=tostring(properties.essentials.description)\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n    | extend ProviderName=parse_json(tags)[\"profile-id\"]\r\n    | where workspace =~ '{Workspace}'\r\n    | project AlertRule=tolower(id), ProviderName) on AlertRule\r\n| extend FiredTime=format_datetime(StartTime, 'MM/dd/yy, hh:mm tt')\r\n| where not(isnull(ProviderName))\r\n| where '*' in ({SeverityFilter}) or Severity in ({SeverityFilter})\r\n| order by Severity asc, State, StartTime\r\n| project Name=name, Severity, State, Description, FiredTime, id, ProviderName\r\n| limit 100",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 11,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      },
                      "customColumnWidthSetting": "85px"
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Alerts"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "print providersList = parse_json(base64_decode_tostring('{ProvidersList:base64}'))\r\n| mv-expand provider = providersList.value\r\n| where provider.properties.provisioningState == \"Succeeded\"\r\n| extend sidValue = iff(isnotnull(provider.properties.providerSettings.sapSid),\r\nprovider.properties.providerSettings.sapSid, provider.properties.providerSettings.sid)\r\n| extend ProviderType = provider.properties.providerSettings.providerType\r\n| where isnotnull(sidValue)\r\n| project id=provider.id, Name=provider.name, ProviderType, SID=tostring(sidValue)\r\n| mv-apply group=parse_json('{Config}').properties.grouping.landscape on\r\n(\r\n    extend idx=array_index_of(group.topSid, SID)\r\n)\r\n| where idx >= 0\r\n| extend ProviderCategory = iff(ProviderType in (\"SapHana\", \"Db2\", \"MsSqlServer\"), \"Database\", iff(ProviderType == \"SapNetWeaver\", \"SAPNetWeaver\",\r\niff(ProviderType == \"PrometheusHaCluster\", \"PacemakerCluster\", \"OS\")))\r\n| project ProviderID=id, ProviderName=Name, ProviderCategory, SID, GroupName=group.name\r\n| where '*' in ({GroupFilter}) or GroupName in ({GroupFilter})\r\n| where '*' in ({SIDFilter}) or SID in ({SIDFilter})\r\n| where '*' in ({CategoryFilter}) or ProviderCategory in ({CategoryFilter})\r\n",
              "size": 0,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "conditionalVisibility": {
              "parameterName": "1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "Providers"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\",\"mergeType\":\"inner\",\"leftTable\":\"Alerts\",\"rightTable\":\"Providers\",\"leftColumn\":\"ProviderName\",\"rightColumn\":\"ProviderName\"}],\"projectRename\":[{\"originalName\":\"[Alerts].Name\",\"mergedName\":\"Alert\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].SID\",\"mergedName\":\"SID\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].Severity\",\"mergedName\":\"Severity\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].State\",\"mergedName\":\"State\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].Description\",\"mergedName\":\"Description\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].FiredTime\",\"mergedName\":\"FiredTime\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].id\",\"mergedName\":\"id\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Alerts].ProviderName\",\"mergedName\":\"ProviderName\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].ProviderID\",\"mergedName\":\"AffectedResource\",\"fromId\":\"unknown\"},{\"originalName\":\"[Providers].ProviderName\",\"mergedName\":\"ProviderName1\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].GroupName\",\"mergedName\":\"GroupName\",\"fromId\":\"1a908aca-308c-4b0c-a9ba-9e9a0c95e120\"},{\"originalName\":\"[Providers].ProviderCategory\",\"mergedName\":\"ProviderCategory\",\"fromId\":\"unknown\"},{\"originalName\":\"[Alerts].tags\",\"mergedName\":\"tags\",\"fromId\":\"unknown\"},{\"originalName\":\"[Alerts].test\",\"mergedName\":\"test\",\"fromId\":\"unknown\"},{\"originalName\":\"[Providers].id\"},{\"originalName\":\"[Providers].Provider\"},{\"originalName\":\"[Providers].ProviderType\"}]}",
              "size": 0,
              "exportToExcelOptions": "all",
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Alert",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 11,
                    "formatOptions": {
                      "customColumnWidthSetting": "85px"
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProviderName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AffectedResource",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "Resource"
                    }
                  },
                  {
                    "columnMatch": "GroupName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProviderCategory",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "80",
            "showPin": false,
            "name": "AlertsList",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "name": "AlertsGroup"
    }
  ],
  "styleSettings": {
    "spacingStyle": "none"
  },
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}