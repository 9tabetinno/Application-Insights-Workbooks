{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{workspace}"
        ],
        "parameters": [
          {
            "id": "f79d5185-6941-488e-a728-3beaec49f9d4",
            "version": "KqlParameterItem/1.0",
            "name": "timeInterval",
            "label": "Time interval",
            "type": 4,
            "description": "Select time interval to get data",
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "042c4aca-7514-4fe0-852a-55bf59b7f0ab",
            "version": "KqlParameterItem/1.0",
            "name": "timeIntervalFlowLogCheck",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "TimeGenerated between (todatetime('{timeInterval:startISO}') .. datetime_add('day', 7, todatetime('{timeInterval:endISO}')))"
                }
              }
            ]
          },
          {
            "id": "53f8d464-cc4e-4906-86e7-3c90800ed609",
            "version": "KqlParameterItem/1.0",
            "name": "timeIntervalTopologyCheck",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff({timeInterval:seconds} < 86400, TimeGenerated between (datetime_add('day', -1, todatetime('{timeInterval:endISO}')) .. datetime_add('day', 7, todatetime('{timeInterval:endISO}'))), TimeGenerated between (todatetime('{timeInterval:startISO}') .. datetime_add('day', 7, todatetime('{timeInterval:endISO}'))))"
                }
              }
            ]
          },
          {
            "id": "5f59846f-1e06-4f6f-b52f-d06bb63b97fb",
            "version": "KqlParameterItem/1.0",
            "name": "workspace",
            "label": "Log Analytics workspace",
            "type": 5,
            "description": "Select a workspace where Traffic Analytics is configured",
            "isRequired": true,
            "isGlobal": true,
            "query": "Resources\r\n| where type=~ \"microsoft.network/networkwatchers/flowlogs\"\r\n| where properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled == true\r\n| project wsResourceId = tolower(properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId)\r\n| distinct wsResourceId\r\n| project wsResourceId, wsName = tolower(split(wsResourceId, '/')[8])\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "8ba132ac-8838-476c-8eb2-ed42aa2aa983",
            "version": "KqlParameterItem/1.0",
            "name": "subscriptions",
            "label": "Discovered Subscriptions",
            "type": 2,
            "description": "NSGs in these subscriptions are configured to send their flow logs to the selected Log Analytics workspace. Select subscriptions, to analyze traffic from those subscriptions.",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "AzureNetworkAnalytics_CL\r\n| where {timeIntervalTopologyCheck}\r\n| where SubType_s == 'StatusMessage' and ComponentType_s == 'Topology'\r\n| distinct Subscription_g, SubscriptionName_s\r\n| project Subscription_g, SubscriptionName_s, selected = 1",
            "crossComponentResources": [
              "{workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "2a16ef52-9f5d-459b-987e-0b75297860ad",
            "version": "KqlParameterItem/1.0",
            "name": "subscriptionsCheck",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{subscriptions}\" == \"'*'\", true, Subscription_g in~ ({subscriptions}))"
                }
              }
            ]
          },
          {
            "id": "d2028f10-9c63-499c-947d-08eb9a41121d",
            "version": "KqlParameterItem/1.0",
            "name": "resourceGroups",
            "label": "Resource groups",
            "type": 2,
            "description": "Traffic from the VNets in the selected resource groups, shall be analyzed. Select one or more resource groups.",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "AzureNetworkAnalytics_CL\r\n| where {timeIntervalTopologyCheck}\r\n| where SubType_s  =='Topology' and ResourceType !in ('VirtualSubnetwork','VirtualNetworkGatewayConnection','RemoteGatewayConnection', 'Route','NetworkAnalytics','VirtualNetworkPeering','NetworkSecurityGroupRule','SubnetworkConnection')\r\n| where {subscriptionsCheck}\r\n| project rgName = tostring(split(Name_s,'/')[0]), Subscription_g\r\n| distinct rgName, Subscription_g\r\n| project value = rgName, label = rgName, selected = 1",
            "crossComponentResources": [
              "{workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "96e71097-a8c9-4b64-903c-26a51bac174c",
            "version": "KqlParameterItem/1.0",
            "name": "resourceGroupsCheck",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{resourceGroups}\" == \"'*'\", true, rgToCheck in~ ({resourceGroups}))"
                }
              }
            ]
          },
          {
            "id": "282d8918-3c0c-43a0-aa36-6c14c3f5be79",
            "version": "KqlParameterItem/1.0",
            "name": "vnets",
            "label": "VNet",
            "type": 2,
            "description": "Select one or more virtual networks",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "AzureNetworkAnalytics_CL\r\n| where {timeIntervalTopologyCheck}\r\n| where SubType_s  =='Topology' and ResourceType == 'VirtualNetwork'\r\n| where {subscriptionsCheck}\r\n| extend rgToCheck = tostring(split(Name_s, '/')[0])\r\n| where {resourceGroupsCheck} \r\n| project vnetId = strcat(Subscription_g, '/', Name_s )\r\n| distinct vnetId\r\n| project vnetName = tostring(split(vnetId, '/')[2])\r\n| project value = vnetName, label = vnetName, selected = 1",
            "crossComponentResources": [
              "{workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "8bee622a-1e58-404f-aee1-a8c310411e87",
            "version": "KqlParameterItem/1.0",
            "name": "subnets",
            "label": "Subnet",
            "type": 2,
            "description": "Select one or more subnets",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "AzureNetworkAnalytics_CL\r\n| where {timeIntervalTopologyCheck}\r\n| where SubType_s  =='Topology' and ResourceType == 'VirtualSubnetwork'\r\n| where {subscriptionsCheck}\r\n| extend rgToCheck = tostring(split(Name_s, '/')[0])\r\n| where {resourceGroupsCheck}\r\n| project subnetId = strcat(Subscription_g, '/', Name_s)\r\n| distinct subnetId\r\n| project subnetName = tostring(split(subnetId, '/')[3])\r\n| project value = subnetName, label = subnetName, selected = 1",
            "crossComponentResources": [
              "{workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "46fdbc80-975e-40ec-810b-bf7118ff3420",
            "version": "KqlParameterItem/1.0",
            "name": "subscription1Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{subscriptions}\" == \"'*'\", true, Subscription1_g in~ ({subscriptions}))"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c5d7e5b2-58c2-441f-9bcd-d82c38c9501c",
            "version": "KqlParameterItem/1.0",
            "name": "subscription2Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{subscriptions}\" == \"'*'\", true, Subscription2_g in~ ({subscriptions}))"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a3b54f25-1e18-4e33-9582-0a7d0cb600ce",
            "version": "KqlParameterItem/1.0",
            "name": "resourceGroup1Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{resourceGroups}\" == \"'*'\", true, rg1ToCheck in~ ({resourceGroups})) "
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "739e4291-4a53-46b4-8348-ce2bc4cc1ee1",
            "version": "KqlParameterItem/1.0",
            "name": "resourceGroup2Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{resourceGroups}\" == \"'*'\", true, rg2ToCheck in~ ({resourceGroups})) "
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "f31c23e9-d4e4-4c08-909c-5131d3f987a4",
            "version": "KqlParameterItem/1.0",
            "name": "vnet1Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{vnets}\" == \"'*'\", true, vnet1ToCheck in~ ({vnets})) "
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "d6fd78ee-4d6b-4cd3-9d99-896a5e080db1",
            "version": "KqlParameterItem/1.0",
            "name": "vnet2Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{vnets}\" == \"'*'\", true, vnet2ToCheck in~ ({vnets})) "
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "99e9b8b2-4cb9-4a1f-bc3a-e79d4a517f63",
            "version": "KqlParameterItem/1.0",
            "name": "subnet1Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{subnets}\" == \"'*'\", true, subnet1ToCheck in~ ({subnets})) "
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "9be8b051-3218-42ce-a696-a07bab5a1a34",
            "version": "KqlParameterItem/1.0",
            "name": "subnet2Check",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "iff(\"{subnets}\" == \"'*'\", true, subnet2ToCheck in~ ({subnets})) "
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Checks"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "c973b119-cf4d-462f-b450-d7e5f78add4d",
            "version": "KqlParameterItem/1.0",
            "name": "thousandUnit",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "K"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a2ca6b76-958e-4362-8fa9-937954ce8c7d",
            "version": "KqlParameterItem/1.0",
            "name": "millionUnit",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "M"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "2187717d-ce29-4f0b-a3cc-b7c559f34092",
            "version": "KqlParameterItem/1.0",
            "name": "billionUnit",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "B"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "fd412543-04e8-4545-bbd0-0531b02536c2",
            "version": "KqlParameterItem/1.0",
            "name": "trillionUnit",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "t"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "6a6400a0-c770-4f09-b760-d1deaf8a4973",
            "version": "KqlParameterItem/1.0",
            "name": "quadrillionUnit",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "q"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Constants"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "de721aa6-0b89-465a-976c-56ac0283d568",
            "version": "KqlParameterItem/1.0",
            "name": "displayUnit",
            "label": "Display unit",
            "type": 2,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"flows\", \"label\":\"Flows\", \"selected\":true },\r\n    { \"value\":\"bytes\", \"label\":\"Bytes\" },\r\n    { \"value\":\"packets\", \"label\":\"Packets\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 7"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let ValueWithUnit = (x:real, precision:int) {\r\n    iff(x < 1000, strcat(tostring(round(x, precision)), ''), \r\n    iff(x < 1000000, strcat(tostring(round(x/1000, precision)), ' {thousandUnit}'), \r\n    iff(x < 1000000000, strcat(tostring(round(x/1000000, precision)), ' {millionUnit}'), \r\n    iff(x < 1000000000000, strcat(tostring(round(x/1000000000, precision)), ' {billionUnit}'), \r\n    iff(x < 1000000000000000, strcat(tostring(round(x/1000000000000, precision)), ' {trillionUnit}'), \r\n    strcat(tostring(round(x/1000000000000000, precision)), ' {quadrillionUnit}'))))))\r\n};\r\nAzureNetworkAnalytics_CL\r\n| where SubType_s == 'FlowLog' and (FASchemaVersion_s == '1' or FASchemaVersion_s == '2')\r\n| where FlowType_s in ('ExternalPublic', 'MaliciousFlow', 'AzurePublic') and isnotempty(VM1_s)\r\n// filter begins\r\n| where {timeIntervalFlowLogCheck} and FlowStartTime_t between (datetime('{timeInterval:startISO}') .. datetime('{timeInterval:endISO}'))\r\n| where {subscription1Check} or {subscription2Check}\r\n| extend Subnet1Split = split(Subnet1_s, '/'), Subnet2Split = split(Subnet2_s, '/')\r\n| extend rg1ToCheck = Subnet1Split[0], rg2ToCheck = Subnet2Split[0]\r\n| where {resourceGroup1Check} or {resourceGroup2Check}\r\n| extend vnet1ToCheck = Subnet1Split[1], vnet2ToCheck = Subnet2Split[1]\r\n| where {vnet1Check} or {vnet2Check}\r\n| extend subnet1ToCheck = Subnet1Split[2], subnet2ToCheck = Subnet2Split[2]\r\n| where {subnet1Check} or {subnet2Check}\r\n// filter ends\r\n| extend isMaliciousFlow = (FlowType_s == 'MaliciousFlow'), isBlocked  = (FlowStatus_s == 'D')\r\n| summarize \r\nTotalAllowedOutFlows = sum(AllowedOutFlows_d), \r\nTotalDeniededOutFlows = sum(DeniedOutFlows_d), \r\nMaliciousAllowedOutFlows = sum(iif(isMaliciousFlow, tolong(AllowedOutFlows_d), 0)), \r\nMaliciousDeniedOutFlows = sum(iif(isMaliciousFlow, tolong(DeniedOutFlows_d), 0)), \r\nTotalAllowedOutBytes = sum(iif(isBlocked, 0, tolong(OutboundBytes_d))), \r\nMaliciousAllowedOutBytes = sum(iif(not(isBlocked) and isMaliciousFlow, tolong(OutboundBytes_d), 0)), \r\nTotalAllowedInBytes = sum(iif(isBlocked, 0, tolong(InboundBytes_d))), \r\nMaliciousAllowedInBytes = sum(iif(not(isBlocked) and isMaliciousFlow, tolong(InboundBytes_d), 0)), \r\nTotalAllowedOutPackets = sum(iif(isBlocked, 0, tolong(OutboundPackets_d))), \r\nMaliciousAllowedOutPackets = sum(iif(not(isBlocked) and isMaliciousFlow, tolong(OutboundPackets_d), 0)), \r\nTotalAllowedInPackets = sum(iif(isBlocked, 0, tolong(InboundPackets_d))), \r\nMaliciousAllowedInPackets = sum(iif(not(isBlocked) and isMaliciousFlow, tolong(InboundPackets_d), 0))                                                 \r\nby SrcIP_s, Subnet1_s, VM1_s, Subscription1_g\r\n| where TotalAllowedOutFlows > 0\r\n| sort by TotalAllowedOutFlows desc\r\n| project SrcIP_s, Subnet = split(Subnet1_s, '/')[2], VNet = split(Subnet1_s, '/')[1], resourceGroup = split(Subnet1_s, '/')[0], VM1_s, Subscription1_g,\r\nhostInfo = strcat(Subscription1_g, '#', VM1_s, '#', SrcIP_s),\r\nhostIP = strcat(SrcIP_s, ' (', split(VM1_s, '/')[1], ')'),\r\nTotalAllowedOutFlows = ValueWithUnit(TotalAllowedOutFlows, 3),\r\nTotalDeniededOutFlows = ValueWithUnit(TotalDeniededOutFlows, 3),\r\nMaliciousAllowedOutFlows = ValueWithUnit(MaliciousAllowedOutFlows, 3),\r\nMaliciousDeniedOutFlows = ValueWithUnit(MaliciousDeniedOutFlows, 3),\r\nTotalAllowedOutBytes = format_bytes(TotalAllowedOutBytes, 3),\r\nMaliciousAllowedOutBytes = format_bytes(MaliciousAllowedOutBytes, 3),\r\nTotalAllowedInBytes = format_bytes(TotalAllowedInBytes, 3),\r\nMaliciousAllowedInBytes = format_bytes(MaliciousAllowedInBytes, 3),\r\nTotalAllowedOutPackets = ValueWithUnit(TotalAllowedOutPackets, 3),\r\nMaliciousAllowedOutPackets = ValueWithUnit(MaliciousAllowedOutPackets, 3),\r\nTotalAllowedInPackets = ValueWithUnit(TotalAllowedInPackets, 3),\r\nMaliciousAllowedInPackets = ValueWithUnit(MaliciousAllowedInPackets, 3)\r\n| extend \r\noutbound = iff('{displayUnit:value}' =~ 'bytes', strcat('Allowed (In/Out) : ', TotalAllowedInBytes, '/', TotalAllowedOutBytes), iff('{displayUnit:value}' =~ 'packets', strcat('Allowed (In/Out) : ', TotalAllowedInPackets, '/', TotalAllowedOutPackets), strcat(TotalAllowedOutFlows, '/', TotalDeniededOutFlows))),\r\noutboundMalicious = iff('{displayUnit:value}' =~ 'bytes', strcat('Allowed (In/Out) : ', MaliciousAllowedInBytes, '/', MaliciousAllowedOutBytes), iff('{displayUnit:value}' =~ 'packets', strcat('Allowed (In/Out) : ', MaliciousAllowedInPackets, '/', MaliciousAllowedOutPackets), strcat(MaliciousAllowedOutFlows, '/', MaliciousDeniedOutFlows)))",
        "size": 0,
        "title": "getTopHostsSendingTrafficToInternet",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{workspace}"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "timeInterval",
        "comparison": "isEqualTo",
        "value": "never"
      },
      "name": "getTopHostsSendingTrafficToInternet"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AzureNetworkAnalytics_CL\r\n| where SubType_s == 'FlowLog' and (FASchemaVersion_s == '1' or FASchemaVersion_s == '2')\r\n| where FlowType_s in ('ExternalPublic', 'MaliciousFlow', 'AzurePublic')\r\n// filter begins\r\n| where {timeIntervalFlowLogCheck} and FlowStartTime_t between (datetime('{timeInterval:startISO}') .. datetime('{timeInterval:endISO}'))\r\n| where {subscription1Check} or {subscription2Check}\r\n| extend Subnet1Split = split(Subnet1_s, '/'), Subnet2Split = split(Subnet2_s, '/')\r\n| extend rg1ToCheck = Subnet1Split[0], rg2ToCheck = Subnet2Split[0]\r\n| where {resourceGroup1Check} or {resourceGroup2Check}\r\n| extend vnet1ToCheck = Subnet1Split[1], vnet2ToCheck = Subnet2Split[1]\r\n| where {vnet1Check} or {vnet2Check}\r\n| extend subnet1ToCheck = Subnet1Split[2], subnet2ToCheck = Subnet2Split[2]\r\n| where {subnet1Check} or {subnet2Check}\r\n// filter ends\r\n| extend hostInfo = strcat(Subscription1_g, '#', VM1_s, '#', SrcIP_s)\r\n| summarize TotalAllowedOutFlows = sum(AllowedOutFlows_d) by OtherSide = iif(isnotempty(Country_s), Country_s, AzureRegion_s), hostInfo\r\n| top-nested of hostInfo by max(1), top-nested 3 of OtherSide by max(TotalAllowedOutFlows)\r\n| project hostInfo, OtherSide\r\n| summarize topOtherSide = strcat_array(make_list(OtherSide), ', ') by hostInfo\r\n| project hostInfo, topOtherSide",
        "size": 4,
        "title": "getTopInternetAddresses",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{workspace}"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "timeInterval",
        "comparison": "isEqualTo",
        "value": "never"
      },
      "name": "getTopInternetAddresses"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AzureNetworkAnalytics_CL\r\n| where SubType_s == 'FlowLog' and (FASchemaVersion_s == '1' or FASchemaVersion_s == '2')\r\n| where FlowType_s in ('ExternalPublic', 'MaliciousFlow', 'AzurePublic')\r\n// filter begins\r\n| where {timeIntervalFlowLogCheck} and FlowStartTime_t between (datetime('{timeInterval:startISO}') .. datetime('{timeInterval:endISO}'))\r\n| where {subscription1Check} or {subscription2Check}\r\n| extend Subnet1Split = split(Subnet1_s, '/'), Subnet2Split = split(Subnet2_s, '/')\r\n| extend rg1ToCheck = Subnet1Split[0], rg2ToCheck = Subnet2Split[0]\r\n| where {resourceGroup1Check} or {resourceGroup2Check}\r\n| extend vnet1ToCheck = Subnet1Split[1], vnet2ToCheck = Subnet2Split[1]\r\n| where {vnet1Check} or {vnet2Check}\r\n| extend subnet1ToCheck = Subnet1Split[2], subnet2ToCheck = Subnet2Split[2]\r\n| where {subnet1Check} or {subnet2Check}\r\n// filter ends\r\n| extend hostInfo = strcat(Subscription1_g, '#', VM1_s, '#', SrcIP_s)\r\n| extend portInfo = strcat(toint(DestPort_d), '#', L7Protocol_s)\r\n| summarize TotalAllowedOutFlows = sum(AllowedOutFlows_d) by portInfo, hostInfo\r\n| top-nested of hostInfo by max(1), top-nested 3 of portInfo by max(TotalAllowedOutFlows)\r\n| project hostInfo, portInfo\r\n| summarize topPortInfo = strcat_array(make_list(strcat(split(portInfo, '#')[0], '(', split(portInfo, '#')[1], ')')), ', ') by hostInfo\r\n| project hostInfo, topPortInfo",
        "size": 4,
        "title": "getTopProtocols",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{workspace}"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "timeInterval",
        "comparison": "isEqualTo",
        "value": "never"
      },
      "name": "getTopProtocols"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AzureNetworkAnalytics_CL\r\n| where SubType_s == 'FlowLog' and (FASchemaVersion_s == '1' or FASchemaVersion_s == '2')\r\n| where FlowType_s == 'MaliciousFlow'\r\n// filter begins\r\n| where {timeIntervalFlowLogCheck} and FlowStartTime_t between (datetime('{timeInterval:startISO}') .. datetime('{timeInterval:endISO}'))\r\n| where {subscription1Check} or {subscription2Check}\r\n| extend Subnet1Split = split(Subnet1_s, '/'), Subnet2Split = split(Subnet2_s, '/')\r\n| extend rg1ToCheck = Subnet1Split[0], rg2ToCheck = Subnet2Split[0]\r\n| where {resourceGroup1Check} or {resourceGroup2Check}\r\n| extend vnet1ToCheck = Subnet1Split[1], vnet2ToCheck = Subnet2Split[1]\r\n| where {vnet1Check} or {vnet2Check}\r\n| extend subnet1ToCheck = Subnet1Split[2], subnet2ToCheck = Subnet2Split[2]\r\n| where {subnet1Check} or {subnet2Check}\r\n// filter ends\r\n| extend \r\nhostInfo1 = strcat(Subscription1_g, '#', VM1_s, '#', SrcIP_s), \r\nhostInfo2 = strcat(Subscription1_g, '#', VM1_s, '#', DestIP_s)\r\n| mv-expand hostInfo = pack_array(hostInfo1, hostInfo2) to typeof(string)\r\n| extend splittedHostInfo = split(hostInfo, '#')\r\n| extend IP = iif(DestIP_s == splittedHostInfo[2], SrcIP_s, iif(SrcIP_s == splittedHostInfo, DestIP_s, ''))\r\n| where isnotempty(IP)\r\n| extend IPInfo = strcat(IP, '#', Country_s)\r\n| summarize TotalAllowedOutFlows = sum(AllowedOutFlows_d) by IPInfo, hostInfo\r\n| top-nested of hostInfo by max(1), top-nested 3 of IPInfo by max(TotalAllowedOutFlows)\r\n| project hostInfo, IPInfo\r\n| summarize topIPInfo = strcat_array(make_list(strcat(split(IPInfo, '#')[0], '(', split(IPInfo, '#')[1], ')')), ', ') by hostInfo\r\n| project hostInfo, topIPInfo",
        "size": 4,
        "title": "getDestinationMaliciousIPs",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{workspace}"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "timeInterval",
        "comparison": "isEqualTo",
        "value": "never"
      },
      "name": "getDestinationMaliciousIPs"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"a1af183a-b05e-4bec-8115-df4c9ef78dba\",\"mergeType\":\"outer\",\"leftTable\":\"getTopInternetAddresses\",\"rightTable\":\"getTopProtocols\",\"leftColumn\":\"hostInfo\",\"rightColumn\":\"hostInfo\"},{\"id\":\"a1af183a-b05e-4bec-8115-df4c9ef78dbb\",\"mergeType\":\"outer\",\"leftTable\":\"getTopInternetAddresses\",\"rightTable\":\"getDestinationMaliciousIPs\",\"leftColumn\":\"hostInfo\",\"rightColumn\":\"hostInfo\"}],\"projectRename\":[{\"originalName\":\"[getTopInternetAddresses].hostInfo\",\"mergedName\":\"hostInfo\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dba\"},{\"originalName\":\"[getTopInternetAddresses].topOtherSide\",\"mergedName\":\"topOtherSide\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dba\"},{\"originalName\":\"[getTopProtocols].hostInfo\",\"mergedName\":\"hostInfo1\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dba\"},{\"originalName\":\"[getTopProtocols].topPortInfo\",\"mergedName\":\"topPortInfo\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dba\"},{\"originalName\":\"[getDestinationMaliciousIPs].hostInfo\",\"mergedName\":\"hostInfo2\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dbb\"},{\"originalName\":\"[getDestinationMaliciousIPs].topIPInfo\",\"mergedName\":\"topIPInfo\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dbb\"}]}",
        "size": 1,
        "title": "Merge all top 3 queries",
        "queryType": 7
      },
      "conditionalVisibility": {
        "parameterName": "timeInterval",
        "comparison": "isEqualTo",
        "value": "never"
      },
      "name": "Merge all top 3 queries"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\",\"mergeType\":\"leftouter\",\"leftTable\":\"getTopHostsSendingTrafficToInternet\",\"rightTable\":\"Merge all top 3 queries\",\"leftColumn\":\"hostInfo\",\"rightColumn\":\"hostInfo\"}],\"projectRename\":[{\"originalName\":\"[getTopHostsSendingTrafficToInternet].hostIP\",\"mergedName\":\"hostIP\",\"fromId\":\"unknown\"},{\"originalName\":\"[Merge all top 3 queries].topPortInfo\",\"mergedName\":\"topPortInfo\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[Merge all top 3 queries].topOtherSide\",\"mergedName\":\"topOtherSide\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].outbound\",\"mergedName\":\"outbound\",\"fromId\":\"unknown\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].SrcIP_s\",\"mergedName\":\"SrcIP_s\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].TotalAllowedOutFlows\",\"mergedName\":\"TotalAllowedOutFlows\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[Merge all top 3 queries].topIPInfo\",\"mergedName\":\"topIPInfo\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].outboundMalicious\",\"mergedName\":\"outboundMalicious\",\"fromId\":\"unknown\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].Subnet1_s\",\"mergedName\":\"Subnet1_s\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].VM1_s\",\"mergedName\":\"VM1_s\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].TotalDeniededOutFlows\",\"mergedName\":\"TotalDeniededOutFlows\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].MaliciousAllowedOutFlows\",\"mergedName\":\"MaliciousAllowedOutFlows\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].MaliciousDeniedOutFlows\",\"mergedName\":\"MaliciousDeniedOutFlows\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].TotalAllowedOutBytes\",\"mergedName\":\"TotalAllowedOutBytes\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].MaliciousAllowedOutBytes\",\"mergedName\":\"MaliciousAllowedOutBytes\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].TotalAllowedInBytes\",\"mergedName\":\"TotalAllowedInBytes\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].MaliciousAllowedInBytes\",\"mergedName\":\"MaliciousAllowedInBytes\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].TotalAllowedOutPackets\",\"mergedName\":\"TotalAllowedOutPackets\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].MaliciousAllowedOutPackets\",\"mergedName\":\"MaliciousAllowedOutPackets\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].TotalAllowedInPackets\",\"mergedName\":\"TotalAllowedInPackets\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].MaliciousAllowedInPackets\",\"mergedName\":\"MaliciousAllowedInPackets\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].hostInfo\",\"mergedName\":\"hostInfo\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[Merge all top 3 queries].hostInfo\",\"mergedName\":\"hostInfo1\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[Merge all top 3 queries].hostInfo1\",\"mergedName\":\"hostInfo11\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[Merge all top 3 queries].hostInfo2\",\"mergedName\":\"hostInfo2\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].Subnet\",\"mergedName\":\"Subnet\",\"fromId\":\"unknown\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].VNet\",\"mergedName\":\"VNet\",\"fromId\":\"unknown\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"unknown\"},{\"originalName\":\"[getTopHostsSendingTrafficToInternet].Subscription1_g\",\"mergedName\":\"Subscription1_g\",\"fromId\":\"a1af183a-b05e-4bec-8115-df4c9ef78dc6\"}]}",
        "size": 0,
        "title": "Details of top IPs sending traffic to Internet",
        "showExportToExcel": true,
        "queryType": 7,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "hostIP",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10%"
              }
            },
            {
              "columnMatch": "topPortInfo",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10%"
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                },
                "emptyValCustomText": "-"
              }
            },
            {
              "columnMatch": "topOtherSide",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10%"
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                },
                "emptyValCustomText": "-"
              }
            },
            {
              "columnMatch": "outbound",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "SrcIP_s",
              "formatter": 5
            },
            {
              "columnMatch": "TotalAllowedOutFlows",
              "formatter": 5,
              "formatOptions": {
                "compositeBarSettings": {
                  "labelText": "[\"TotalAllowedOutFlows\"]/[\"TotalDeniededOutFlows\"] Allowed Packets (In/Out): [\"TotalAllowedInPackets\"]/[\"TotalAllowedOutPackets\"] Allowed Bytes (In/Out): [\"TotalAllowedInBytes\"]/[\"TotalAllowedOutBytes\"])",
                  "columnSettings": [],
                  "noRowsScaling": true
                },
                "customColumnWidthSetting": "30%"
              }
            },
            {
              "columnMatch": "topIPInfo",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10%"
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                },
                "emptyValCustomText": "-"
              }
            },
            {
              "columnMatch": "outboundMalicious",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "VM1_s",
              "formatter": 5
            },
            {
              "columnMatch": "TotalDeniededOutFlows",
              "formatter": 5
            },
            {
              "columnMatch": "MaliciousAllowedOutFlows",
              "formatter": 5,
              "formatOptions": {
                "compositeBarSettings": {
                  "labelText": "[\"MaliciousAllowedOutFlows\"]/[\"MaliciousDeniedOutFlows\"] Allowed Packets (In/Out): [\"MaliciousAllowedInPackets\"]/[\"MaliciousAllowedOutPackets\"] Allowed Bytes (In/Out): [\"MaliciousAllowedInBytes\"]/[\"MaliciousAllowedOutBytes\"])",
                  "columnSettings": [],
                  "noRowsScaling": true
                },
                "customColumnWidthSetting": "30%"
              }
            },
            {
              "columnMatch": "MaliciousDeniedOutFlows",
              "formatter": 5
            },
            {
              "columnMatch": "TotalAllowedOutBytes",
              "formatter": 5
            },
            {
              "columnMatch": "MaliciousAllowedOutBytes",
              "formatter": 5
            },
            {
              "columnMatch": "TotalAllowedInBytes",
              "formatter": 5
            },
            {
              "columnMatch": "MaliciousAllowedInBytes",
              "formatter": 5
            },
            {
              "columnMatch": "TotalAllowedOutPackets",
              "formatter": 5
            },
            {
              "columnMatch": "MaliciousAllowedOutPackets",
              "formatter": 5
            },
            {
              "columnMatch": "TotalAllowedInPackets",
              "formatter": 5
            },
            {
              "columnMatch": "MaliciousAllowedInPackets",
              "formatter": 5
            },
            {
              "columnMatch": "hostInfo",
              "formatter": 5
            },
            {
              "columnMatch": "hostInfo1",
              "formatter": 5
            },
            {
              "columnMatch": "hostInfo11",
              "formatter": 5
            },
            {
              "columnMatch": "hostInfo2",
              "formatter": 5
            },
            {
              "columnMatch": "Subnet",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "5%"
              }
            },
            {
              "columnMatch": "VNet",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "5%"
              }
            },
            {
              "columnMatch": "resourceGroup",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "10%"
              }
            },
            {
              "columnMatch": "Subscription1_g",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "10%"
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "hostIP",
              "label": "Host IP"
            },
            {
              "columnId": "topPortInfo",
              "label": "Top destination ports"
            },
            {
              "columnId": "topOtherSide",
              "label": "Top countries/Azure regions"
            },
            {
              "columnId": "outbound",
              "label": "Outbound (Allowed/Blocked)"
            },
            {
              "columnId": "SrcIP_s"
            },
            {
              "columnId": "TotalAllowedOutFlows",
              "label": "Outbound (Allowed/Blocked)"
            },
            {
              "columnId": "topIPInfo",
              "label": "Top communicating malicious IPs"
            },
            {
              "columnId": "outboundMalicious",
              "label": "Outbound malicious (Allowed/Blocked)"
            },
            {
              "columnId": "VM1_s"
            },
            {
              "columnId": "TotalDeniededOutFlows"
            },
            {
              "columnId": "MaliciousAllowedOutFlows",
              "label": "Outbound malicious (Allowed/Blocked)"
            },
            {
              "columnId": "MaliciousDeniedOutFlows"
            },
            {
              "columnId": "TotalAllowedOutBytes"
            },
            {
              "columnId": "MaliciousAllowedOutBytes"
            },
            {
              "columnId": "TotalAllowedInBytes"
            },
            {
              "columnId": "MaliciousAllowedInBytes"
            },
            {
              "columnId": "TotalAllowedOutPackets"
            },
            {
              "columnId": "MaliciousAllowedOutPackets"
            },
            {
              "columnId": "TotalAllowedInPackets"
            },
            {
              "columnId": "MaliciousAllowedInPackets"
            },
            {
              "columnId": "hostInfo"
            },
            {
              "columnId": "hostInfo1"
            },
            {
              "columnId": "hostInfo11"
            },
            {
              "columnId": "hostInfo2"
            },
            {
              "columnId": "Subnet"
            },
            {
              "columnId": "VNet"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource group"
            },
            {
              "columnId": "Subscription1_g",
              "label": "Subscription"
            }
          ]
        }
      },
      "name": "Details of top IPs sending traffic to Internet"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}