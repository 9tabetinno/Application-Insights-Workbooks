{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## High Temporary File usage\r\n\r\n<h6>*In this workbook we will try to identify the probable causes of high temporary file generation and possible fixes to mitigate the issue. As a first step please select timestamp when you encounter the issue. *</h6>\r\n\r\nStep | Observations\r\n--- | ---\r\n**Select Parameters** | Step 0: Select time interval of interest.\r\n**Understand Storage usage** | Step 1: Check server storage used. Any sudden huge spike in storage used in the time interval selected compared to previous time intervals may need further investigation.\r\n**Understand Temporary File Generation** | Step 2: Analyze the number of temporary files and temporary bytes generated in the time interval selected. Any spike in values compared to previous time intervals may need further investigation.\r\n**Understand the workload** | Step 3: Analyze the  `read` and `write workloads` during the time interval.\r\n**Identify High Temporary file generation queries** | step 4: Identify and analyze high temporary file generation queries using query store."
      },
      "name": "text - High Temporary File usage workbook"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "ad4f3a3b-ec2f-4483-8b9f-968bacd5c444",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "includeAll": true,
              "showDefault": false
            },
            "value": null
          },
          {
            "id": "9ebd8e9a-5e9c-496a-bdb1-e41b9faaf9ad",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "value": {
              "durationMs": 424687147,
              "endTime": "2023-03-01T02:08:38.639Z"
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "label": "TimeRange (Local Time)"
          },
          {
            "id": "6573f642-b4c6-4a56-8bdd-8ef451b7bdf5",
            "version": "KqlParameterItem/1.0",
            "name": "Resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false,
              "componentIdOnly": true
            }
          },
          {
            "id": "09ae6e10-24ff-4eb0-964c-78c3bebf6b0b",
            "version": "KqlParameterItem/1.0",
            "name": "MIN_TIME_WINDOW_SEC",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "3600"
                }
              }
            ]
          },
          {
            "id": "655143e7-f5f6-4d8a-81f9-9aa8c49e2520",
            "version": "KqlParameterItem/1.0",
            "name": "READ_WORKLOAD_SPIKE_TUP_RETURNED_PCT",
            "type": 1,
            "description": "Defines the minimum % difference in tuples returned between intervals to classify a read workload spike. ",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "50"
                }
              }
            ]
          },
          {
            "id": "e43a4f05-b912-4815-870d-e22141b050fc",
            "version": "KqlParameterItem/1.0",
            "name": "WINDOW_SIZE_FOR_QUERY_TIME_CAPTURE",
            "type": 1,
            "description": "Specifies aggregation window to capture max query time for high time consuming queries ",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "30m"
                }
              }
            ]
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "MIN_TIME_WINDOW_SEC",
            "type": 1,
            "description": "Defines the minimum time a connection may exist before it is classified as long lived",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "3600"
                }
              }
            ],
            "id": "f8678c39-7dad-4aef-aae1-d67793e82c01"
          },
          {
            "id": "089a8ccf-b6cb-4f68-adff-2bef115928ae",
            "version": "KqlParameterItem/1.0",
            "name": "QueryStoreTable",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "AzureDiagnostics"
                }
              }
            ]
          },
          {
            "id": "e5f4fc66-344a-4a21-b495-f5cc20c3ec1a",
            "version": "KqlParameterItem/1.0",
            "name": "SessionsTable",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "AzureDiagnostics"
                }
              }
            ]
          },
          {
            "id": "50d73c33-57bd-4010-b262-b1b32cf9be16",
            "version": "KqlParameterItem/1.0",
            "name": "MetricsTable",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "AzureMetrics"
                }
              }
            ]
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 0"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Resource}"
        ],
        "parameters": [
          {
            "id": "62507ec3-c7bd-4ef2-b0c5-69eddf960a36",
            "version": "KqlParameterItem/1.0",
            "name": "GlobalEndTime",
            "type": 1,
            "query": "// GlobalEndTime will always equal TimeRange:end\r\n// In the case which selected interval is less than an hour, \r\n// we set GlobalStartTime to be an hour before GlobalEndTime\r\n// in order to avoid showing data \"in the future\".\r\n//print iff(true, totimespan({TimeRange:end}), totimespan({TimeRange:end}))\r\n\r\nlet dt = {TimeRange:end};\r\nprint iff(dt<now(), dt, now())",
            "crossComponentResources": [
              "{Resource}"
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "25ec8def-09e9-4f9a-9b24-ac5fbe85ebf2",
            "version": "KqlParameterItem/1.0",
            "name": "GlobalStartTime",
            "type": 1,
            "query": "// GlobalEndTime will always equal TimeRange:end\r\n// In the case which selected interval is less than an hour, \r\n// we set GlobalStartTime to be an hour before GlobalEndTime\r\n// in order to avoid showing data \"in the future\".\r\n//print iff(true, totimespan({TimeRange:end}), totimespan({TimeRange:end}))\r\nprint iff (datetime_diff('second',{TimeRange:end},{TimeRange:start})<={MIN_TIME_WINDOW_SEC},todatetime('{GlobalEndTime}')-{MIN_TIME_WINDOW_SEC}s,{TimeRange:start})",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "477ec0d7-9343-498c-9124-6ab8e638c20c",
            "version": "KqlParameterItem/1.0",
            "name": "LessThanOneHourInterval",
            "type": 1,
            "query": "let interval = 1h;\r\nprint iff({TimeRange:end} - {TimeRange:start} < interval, \"Yes\", \"No\")",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "365629ac-caa7-4ffa-9889-7b40958a6bae",
            "version": "KqlParameterItem/1.0",
            "name": "ChartGrain",
            "type": 1,
            "query": "let trange=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nprint case(\r\n    trange<1h, strcat(format_timespan(trange,'m'),' minute(s)'),\r\n    trange>=1h and trange<1d, strcat(format_timespan(trange,'H'),' hour(s)') ,\r\n    strcat(format_timespan(trange,'dd'),' day(s)')\r\n);",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "d588d0c7-1779-4e73-9fa2-5cf8b82546aa",
            "version": "KqlParameterItem/1.0",
            "name": "MetricsGrain",
            "type": 1,
            "query": "let trange=iff({TimeRange:grain}<5m,5m, {TimeRange:grain});\r\nprint case(\r\n    trange<1h, strcat(format_timespan(trange,'m'),' minute(s)'),\r\n    trange>=1h and trange<1d, strcat(format_timespan(trange,'H'),' hour(s)') ,\r\n    strcat(format_timespan(trange,'dd'),' day(s)')\r\n);",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "3a7a3473-12de-428c-815c-251e02cdd4ab",
            "version": "KqlParameterItem/1.0",
            "name": "ChartGrainMin5",
            "type": 1,
            "query": "let trange=iff({TimeRange:grain}<5m,5m, {TimeRange:grain});\r\nprint case(\r\n    trange<1h, strcat(format_timespan(trange,'m'),' minute(s)'),\r\n    trange>=1h and trange<1d, strcat(format_timespan(trange,'H'),' hour(s)') ,\r\n    strcat(format_timespan(trange,'dd'),' day(s)')\r\n);",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "565d9a83-0cc6-4771-a3d7-2d1d09d42939",
            "version": "KqlParameterItem/1.0",
            "name": "QueryStoreCheck",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/configurations/pg_qs.query_capture_mode?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[]}}]}",
            "queryType": 12,
            "value": null
          },
          {
            "id": "d9c007b5-a303-452f-a8e1-5015cdb91dfe",
            "version": "KqlParameterItem/1.0",
            "name": "isQueryStoreEnabled",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "QueryStoreCheck",
                  "operator": "!=",
                  "rightValType": "static",
                  "rightVal": "none",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ]
          },
          {
            "id": "36494c35-b8fd-4cb0-954a-93742783ce08",
            "version": "KqlParameterItem/1.0",
            "name": "IsMetricsCollectorDatabaseActivityOn",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/configurations/metrics.collector_database_activity?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[]}}]}",
            "queryType": 12,
            "value": null
          },
          {
            "id": "2bcdd9c1-a232-42e5-959c-a807bf44f44f",
            "version": "KqlParameterItem/1.0",
            "name": "AzureDiagAPIAllLogs",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..logs[?(@.categoryGroup=='allLogs')].enabled\",\"columns\":[]}}]}",
            "queryType": 12
          },
          {
            "id": "ac9ae199-d04a-40e3-8e06-34231150b17e",
            "version": "KqlParameterItem/1.0",
            "name": "AzureDiagAPIQueryStoreRuntime",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..logs[?(@.category=='PostgreSQLFlexQueryStoreRuntime')].enabled\",\"columns\":[]}}]}",
            "queryType": 12,
            "value": null
          },
          {
            "id": "f7f1a077-1250-431f-8122-8ee86e4b00c2",
            "version": "KqlParameterItem/1.0",
            "name": "IsQueryStoreRuntimeSentToLogAnalytics",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIAllLogs",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIQueryStoreRuntime",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ]
          },
          {
            "id": "e8981d8d-08e7-47b9-a792-efbb490d686e",
            "version": "KqlParameterItem/1.0",
            "name": "IsServerPrimaryAPI",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..replicationRole\",\"columns\":[]}}]}",
            "queryType": 12
          },
          {
            "id": "c61d900d-f432-4759-b2e4-ba4903c3a6bc",
            "version": "KqlParameterItem/1.0",
            "name": "IsServerPrimaryCheck",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "IsServerPrimaryAPI",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Primary",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ]
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers"
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isEqualTo",
        "value": "y"
      },
      "name": "parameters - parameter check"
    },
    {
      "type": 1,
      "content": {
        "json": "### Enhanced Metrics are currently disabled.\r\nThis workbook requires the use of enhanced metrics to display the content in `workload` and `temporary files generated` tabs below. To activate these metrics, simply enable the dynamic server parameter `metrics.collector_database_activity`.",
        "style": "error"
      },
      "conditionalVisibility": {
        "parameterName": "IsMetricsCollectorDatabaseActivityOn",
        "comparison": "isNotEqualTo",
        "value": "ON"
      },
      "name": "text - 57 - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "### Query Store is currently disabled\r\nThis workbook depends on Query Store data. You need to enable it by setting the dynamic server parameter `pg_qs.query_capture_mode` to either All or TOP, and configuring the Diagnostic Settings destination to log analytics. Please refer to the following guide for detailed instructions: https://learn.microsoft.com/azure/postgresql/flexible-server/howto-configure-and-access-logs.",
        "style": "error"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "No"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        }
      ],
      "name": "text - 57"
    },
    {
      "type": 1,
      "content": {
        "json": "### The Query Store data is not being transmitted to the log analytics workspace\r\nThe Query Store data is not being sent to the log analytics workspace, which is necessary to use this workbook. To configure the logging settings for Query Store categories(`PostgreSQL Query Store Runtime` & `PostgreSQL Query Store Wait Statistics`) and send the data to a log analytics workspace, please refer to this guide for detailed instructions: https://learn.microsoft.com/azure/postgresql/flexible-server/howto-configure-and-access-logs.",
        "style": "error"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "IsQueryStoreRuntimeSentToLogAnalytics",
          "comparison": "isEqualTo",
          "value": "No"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        }
      ],
      "name": "text - 49"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "ee43ed49-2952-4ec1-bc72-84bbcc71591a",
            "cellValue": "temptab",
            "linkTarget": "parameter",
            "linkLabel": "Storage Utilization",
            "subTarget": "storage",
            "preText": "Storage Utilization",
            "style": "link"
          },
          {
            "id": "9b83c708-b230-436c-bd2f-16dc00270d74",
            "cellValue": "temptab",
            "linkTarget": "parameter",
            "linkLabel": "Temporary Files Generated",
            "subTarget": "tempfiles",
            "style": "link"
          },
          {
            "id": "77c6da6f-b6a5-4014-a702-7dfd33d570f8",
            "cellValue": "temptab",
            "linkTarget": "parameter",
            "linkLabel": "Workload Details",
            "subTarget": "workload",
            "style": "link"
          },
          {
            "id": "002bb8a3-a418-42f3-a9ae-b23596d9b62f",
            "cellValue": "temptab",
            "linkTarget": "parameter",
            "linkLabel": "Temporary Files Generation Queries",
            "subTarget": "tempqueries",
            "style": "link"
          }
        ]
      },
      "name": "links - 51"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "6ecc08b6-475d-4e78-b2d6-6fc300932335",
            "cellValue": "storage-tab",
            "linkTarget": "parameter",
            "linkLabel": "Storage Used Percentage",
            "subTarget": "storagepct",
            "style": "link"
          },
          {
            "id": "559e5a96-b09c-4c9c-9d6b-ab15ef257d28",
            "cellValue": "storage-tab",
            "linkTarget": "parameter",
            "linkLabel": "Storage Used Size",
            "subTarget": "storageused",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "temptab",
        "comparison": "isEqualTo",
        "value": "storage"
      },
      "name": "links - 75"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbooka25b2c44-0749-4517-ba9d-63dbec8293ab",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Saturation-storage_used",
            "aggregation": 3,
            "splitBy": null
          }
        ],
        "title": "Maximum Storage Space Used. Data is plotted at a granularity of {MetricsGrain}",
        "showCreateAlertRule": true,
        "timeBrushParameterName": "TimeRange",
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "storage-tab",
          "comparison": "isEqualTo",
          "value": "storageused"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "storage"
        }
      ],
      "name": "metric - 47"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook20a3930f-e48b-43a6-8739-0906f905d8cc",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Saturation-storage_percent",
            "aggregation": 3,
            "splitBy": null
          }
        ],
        "title": "Maximum Percent of Storage Space Used. Data is plotted at a granularity of {MetricsGrain}",
        "showCreateAlertRule": true,
        "timeBrushParameterName": "TimeRange",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Subscription",
              "formatter": 5
            },
            {
              "columnMatch": "Name",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Saturation-storage_percent Timeline",
              "formatter": 5
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Saturation-storage_percent",
              "formatter": 1,
              "numberFormat": {
                "unit": 1,
                "options": null
              }
            }
          ],
          "rowLimit": 10000,
          "labelSettings": [
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Saturation-storage_percent",
              "label": "Storage percent (Max)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Saturation-storage_percent Timeline",
              "label": "Storage percent Timeline"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "storage-tab",
          "comparison": "isEqualTo",
          "value": "storagepct"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "storage"
        }
      ],
      "name": "Storage Utilization"
    },
    {
      "type": 1,
      "content": {
        "json": "Please observe if you see any spike in storage used percentage during the interval selected. If you see a spike in storage and storage used persentage falls back to original storage used percentage after certain time then please check the temporary bytes and files generated in the window.",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "temptab",
        "comparison": "isEqualTo",
        "value": "storage"
      },
      "name": "text - 20"
    },
    {
      "type": 1,
      "content": {
        "json": "### Temporary file telemtry unavailable. Enhanced Metrics must be enabled to view.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "OFF"
        }
      ],
      "name": "text - 42"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "6ecc08b6-475d-4e78-b2d6-6fc300932335",
            "cellValue": "tempfiles-tab",
            "linkTarget": "parameter",
            "linkLabel": "Temporary Bytes generated",
            "subTarget": "bytes",
            "style": "link"
          },
          {
            "id": "559e5a96-b09c-4c9c-9d6b-ab15ef257d28",
            "cellValue": "tempfiles-tab",
            "linkTarget": "parameter",
            "linkLabel": "Number of temporary files",
            "subTarget": "count",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        }
      ],
      "name": "links - 75"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbookfbb2a9e5-99f8-487c-ad5f-c4473a8a9390",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files",
            "aggregation": 1,
            "splitBy": null
          }
        ],
        "title": "Number of temporary files generated. Data is plotted at a granularity of {MetricsGrain}",
        "showCreateAlertRule": true,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "timeBrushParameterName": "TimeRange",
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tempfiles-tab",
          "comparison": "isEqualTo",
          "value": "count"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        }
      ],
      "name": "metric - 48"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbookfbb2a9e5-99f8-487c-ad5f-c4473a8a9390",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files",
            "aggregation": 1,
            "splitBy": "DatabaseName"
          }
        ],
        "title": "Number of temporary files generated. Data is plotted at a granularity of {MetricsGrain}",
        "gridFormatType": 2,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Subscription",
              "formatter": 5
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Resource"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files",
              "formatter": 1,
              "numberFormat": {
                "unit": 0,
                "options": null
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files Timeline",
              "formatter": 21,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": ".*\\/Temporary Files (Preview)$",
              "formatter": 1
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "sortBy": [
            {
              "itemKey": "$gen_number_microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files_3",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Segment",
              "label": "Database Name"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files",
              "label": "Temporary Files (Sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files Timeline",
              "label": "Temporary Files (Sum) [Timeline]"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_number_microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_files_3",
            "sortOrder": 2
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tempfiles-tab",
          "comparison": "isEqualTo",
          "value": "count"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        }
      ],
      "name": "metric - 48 - Copy"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook98cdb18f-50ac-49d2-af89-e0197b1471e2",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes",
            "aggregation": 1,
            "splitBy": null
          }
        ],
        "title": "Size of temporary files generated. Data is plotted at a granularity of {MetricsGrain}",
        "showCreateAlertRule": true,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "timeBrushParameterName": "TimeRange",
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tempfiles-tab",
          "comparison": "isEqualTo",
          "value": "bytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        }
      ],
      "name": "metric - 45"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook98cdb18f-50ac-49d2-af89-e0197b1471e2",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes",
            "aggregation": 1,
            "splitBy": "DatabaseName"
          }
        ],
        "title": "Size of temporary files generated. Data is plotted at a granularity of {MetricsGrain}",
        "gridFormatType": 2,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Subscription",
              "formatter": 5
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Resource"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes",
              "formatter": 1,
              "numberFormat": {
                "unit": 2,
                "options": null
              }
            },
            {
              "columnMatch": "Timeline",
              "formatter": 21,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 2,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": ".*\\/Temporary Files Size (Preview)$",
              "formatter": 1
            },
            {
              "columnMatch": "Metric",
              "formatter": 1
            },
            {
              "columnMatch": "Aggregation",
              "formatter": 5
            },
            {
              "columnMatch": "Value",
              "formatter": 1
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "sortBy": [
            {
              "itemKey": "$gen_number_microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes_3",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Segment",
              "label": "Database Name"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes",
              "label": "Temporary Files Size (sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes Timeline",
              "label": "Temporary Files Size (sum) [Timeline]"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_number_microsoft.dbforpostgresql/flexibleservers-Database (Preview)-temp_bytes_3",
            "sortOrder": 2
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tempfiles-tab",
          "comparison": "isEqualTo",
          "value": "bytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        }
      ],
      "name": "TemporaryFiles - Grid"
    },
    {
      "type": 1,
      "content": {
        "json": "If the temporary file generation is high and we see storage spikes in the window of interest then analyze the workload and also top temporary files/bytes generating queries ",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempfiles"
        }
      ],
      "name": "text - temporary file generation info"
    },
    {
      "type": 1,
      "content": {
        "json": "### Workload related metrics not available. Enhanced Metrics must be enabled to view.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "OFF"
        }
      ],
      "name": "text - 43"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "31dbd029-ed17-4617-8c18-c4797cafe412",
            "cellValue": "workload-tab",
            "linkTarget": "parameter",
            "linkLabel": "ReadWorkload",
            "subTarget": "readbytes",
            "preText": "Read Workload",
            "style": "link"
          },
          {
            "id": "2bbfd1c5-fd32-4615-826c-083f83ffc503",
            "cellValue": "workload-tab",
            "linkTarget": "parameter",
            "linkLabel": "WriteWorkload",
            "subTarget": "writebytes",
            "preText": "Write Workload",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "links - 38"
    },
    {
      "type": 1,
      "content": {
        "json": "## Read workload details\r\n\r\n**Tup_fetched** and **Tup_returned** are two metrics that measure the number of rows read from a table by a PostgreSQL read workload.\r\n\r\nTup_fetched indicates the total number of live rows that have been fetched from a table using sequential scan and index entries returned by index scans in database, regardless of whether they are already in the cache or need to be read from disk. This metric provides insights into the overall data read using sequential scans.\r\n\r\nOn the other hand, tup_returned measures the number of live rows that are fetched by index scans in this database. This metric is incremented only when a row is actually comes form index scan, so it can provide insight into the efficiency of the query execution.\r\n\r\nBy monitoring these two metrics, administrators can gain a better understanding of the performance of their PostgreSQL read workloads.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "readbytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "text - Read workload info"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbookb945890e-3384-4f08-8518-0515c1c5b144",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
            "aggregation": 1,
            "splitBy": null,
            "columnName": "Tuples Fetched"
          },
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
            "aggregation": 1,
            "columnName": "Tuples Returned"
          }
        ],
        "title": "Read workload Metrics. Data is plotted at a granularity of {MetricsGrain}",
        "showCreateAlertRule": true,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "timeBrushParameterName": "TimeRange",
        "timeBrushExportOnlyWhenBrushed": true,
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "readbytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "Read Workload"
    },
    {
      "type": 1,
      "content": {
        "json": "The read workload metric calculates the total number of tuples fetched and returned, but it does not include databases like `azure_sys` and `azure_maintenance`.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "readbytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "text - 49"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbookb945890e-3384-4f08-8518-0515c1c5b144",
        "version": "MetricsItem/2.0",
        "size": 1,
        "chartType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
            "aggregation": 1,
            "splitBy": "DatabaseName",
            "splitBySortOrder": -1,
            "splitByLimit": 50
          },
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
            "aggregation": 1,
            "splitBy": "DatabaseName",
            "splitBySortOrder": -1,
            "splitByLimit": 50
          }
        ],
        "title": "Tup_fetched & Tup_returned by Database",
        "gridFormatType": 2,
        "showCreateAlertRule": true,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "timeBrushParameterName": "TimeRange",
        "timeBrushExportOnlyWhenBrushed": true,
        "showRefreshButton": true,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Subscription",
              "formatter": 5
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Resource"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Timeline",
              "formatter": 21,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": ".*\\/Tuples Returned$",
              "formatter": 1
            },
            {
              "columnMatch": "Tuples Returned Timeline",
              "formatter": 5
            },
            {
              "columnMatch": "Tuples Returned",
              "formatter": 1,
              "numberFormat": {
                "unit": 0,
                "options": null
              }
            },
            {
              "columnMatch": "Metric",
              "formatter": 1
            },
            {
              "columnMatch": "Aggregation",
              "formatter": 5
            },
            {
              "columnMatch": "Value",
              "formatter": 1
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Segment",
              "label": "Database Name"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
              "label": "Tuples Fetched (Sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched Timeline",
              "label": "Tuples Fetched (Sum) [Timeline]"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
              "label": "Tuples Returned  (Sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned Timeline",
              "label": "Tuples Returned (Sum) [Timeline]"
            }
          ]
        },
        "sortBy": [],
        "showExportToExcel": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "readbytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "Tup_fetched by Database - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "## Write workload details \r\nThe number of tuples that have been inserted, updated, or deleted are critical for understanding the overall performance of the database and for identifying potential inefficiencies.\r\n\r\n**Tuples inserted** represents the number of rows that have been inserted into the database. This metric is particularly useful for monitoring the growth of the database and for assessing the effectiveness of bulk insert operations.\r\n\r\n**Tuples updated** measures the number of rows that have been updated in the database. This metric can help identify queries that are executing inefficiently or that are causing contention within the database.\r\n\r\n**Tuples deleted** represents the number of rows that have been deleted from the database. This metric can help identify queries that are causing excessive data churn or that are deleting more data than is necessary.\r\n\r\nBy monitoring these metrics, administrators can gain insights into the performance of their PostgreSQL write workloads and make data-driven decisions to optimize the database.\r\n\r\n",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "writebytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "text - Write workload info"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook5576f52a-daae-4bd6-8b6e-333f5de05ac1",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
            "aggregation": 1,
            "splitBy": null,
            "columnName": "Tuples Inserted"
          },
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
            "aggregation": 1,
            "columnName": "Tuples Updated"
          },
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
            "aggregation": 1,
            "columnName": "Tuples Deleted"
          }
        ],
        "title": "Write Workload Metrics. Data is plotted at a granularity of {MetricsGrain}",
        "showCreateAlertRule": true,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "timeBrushParameterName": "TimeRange",
        "timeBrushExportOnlyWhenBrushed": true,
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "writebytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "Write Workload Metric"
    },
    {
      "type": 1,
      "content": {
        "json": "The write workload metric calculates the total number of inserted, updated, and deleted tuples, but it does not include databases like `azure_sys` and `azure_maintenance`.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "writebytes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "text - workload info"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbookb945890e-3384-4f08-8518-0515c1c5b144",
        "version": "MetricsItem/2.0",
        "size": 1,
        "chartType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "metricScope": 0,
        "resourceParameter": "Resource",
        "resourceIds": [
          "{Resource}"
        ],
        "timeContextFromParameter": "TimeRange",
        "timeContext": {
          "durationMs": 424687147,
          "endTime": "2023-03-01T02:08:38.639Z"
        },
        "metrics": [
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
            "aggregation": 1,
            "splitBy": "DatabaseName",
            "splitBySortOrder": -1,
            "splitByLimit": 50
          },
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
            "aggregation": 1,
            "splitBy": "DatabaseName",
            "splitBySortOrder": -1,
            "splitByLimit": 50
          },
          {
            "namespace": "microsoft.dbforpostgresql/flexibleservers",
            "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
            "aggregation": 1,
            "splitBy": "DatabaseName",
            "splitBySortOrder": -1,
            "splitByLimit": 50
          }
        ],
        "title": "Tuples Inserted, Updated & Deleted by Database",
        "gridFormatType": 2,
        "showCreateAlertRule": true,
        "filters": [
          {
            "id": "1",
            "key": "DatabaseName",
            "operator": 1,
            "values": [
              "azure_maintenance",
              "azure_sys"
            ]
          }
        ],
        "timeBrushParameterName": "TimeRange",
        "timeBrushExportOnlyWhenBrushed": true,
        "showRefreshButton": true,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Subscription",
              "formatter": 5
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Resource"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Timeline",
              "formatter": 21,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
              "formatter": 1,
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": ".*\\/Tuples Returned$",
              "formatter": 1
            },
            {
              "columnMatch": "Tuples Returned Timeline",
              "formatter": 5
            },
            {
              "columnMatch": "Tuples Returned",
              "formatter": 1,
              "numberFormat": {
                "unit": 0,
                "options": null
              }
            },
            {
              "columnMatch": "Metric",
              "formatter": 1
            },
            {
              "columnMatch": "Aggregation",
              "formatter": 5
            },
            {
              "columnMatch": "Value",
              "formatter": 1
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Segment",
              "label": "Database Name"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
              "label": "Tuples Inserted (Sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted Timeline",
              "label": "Tuples Inserted (Sum) [Timeline]"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
              "label": "Tuples Updated (Sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated Timeline",
              "label": "Tuples Updated (Sum) [Timeline]"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
              "label": "Tuples Deleted (Sum)"
            },
            {
              "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted Timeline",
              "label": "Tuples Deleted (Sum) [Timeline]"
            }
          ]
        },
        "sortBy": [],
        "showExportToExcel": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "workload-tab",
          "comparison": "isEqualTo",
          "value": "writebytes"
        },
        {
          "parameterName": "IsMetricsCollectorDatabaseActivityOn",
          "comparison": "isEqualTo",
          "value": "ON"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "workload"
        }
      ],
      "name": "Tup_fetched by Database - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "### The Query Store's capabilities are not functioning on the replica server.\r\n#### After analysis, we have determined that this server is a replica server, which means that the query store functionality is not available. However, there are alternative methods you can use to monitor long-running sessions on the replica server.\r\n- ##### To help pinpoint possible performance issues, a recommended solution is to adjust the `log_min_duration_statement` parameter to the desired threshold and properly configure `log_line_prefix` to include the relevant details such as **%t-%c user=%u,db=%d,app=%a,client=%h**. This will enable the logging of slow queries in the PostgreSQL logs. By doing so, you can easily access the top queries and review the slow queries that may require optimization.\r\n- ##### Another option is to configure `pg_stat_statements`, which allows you to view information about your query performance on the replica server. However, Please keep in mind that you need to execute the `CREATE EXTENSION pg_stat_statements` command on the primary server database. For more informaiton, please visit [PostgreSQL Documentation](https://www.postgresql.org/docs/current/pgstatstatements.html).\r\n- ##### You can also monitor the ongoing workload on the replica server by using the `pg_stat_activity` catalog view.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "No"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - 46"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Resource}"
        ],
        "parameters": [
          {
            "id": "c446d2b0-4db6-48c9-a6ad-244ea9dcf53b",
            "version": "KqlParameterItem/1.0",
            "name": "HighTempQueries",
            "type": 1,
            "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= Start_Time and todatetime(End_time_t) <= End_Time\r\n|where Temp_blks_written_d >0\r\n| where Userid_d != 10\r\n| count \r\n| extend HaveQueryIds = iff(Count > 0, \"Yes\", \"No\")\r\n| project HaveQueryIds",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers"
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isEqualTo",
        "value": "y"
      },
      "name": "parameters - 47"
    },
    {
      "type": 1,
      "content": {
        "json": "### Query Store has no data in the selected Time Range.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "No"
        },
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - 45"
    },
    {
      "type": 1,
      "content": {
        "json": "### Query Store is disabled on the server.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "No"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - 45 - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "LessThanOneHourInterval",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        }
      ],
      "name": "text - 59"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "/subscriptions/9d3faf91-9fbe-450d-b5dd-37bea9595299/resourcegroups/customerfacingworkbooks"
        ],
        "parameters": [
          {
            "id": "98d4f3a7-4057-400a-a84f-cbd61df98051",
            "version": "KqlParameterItem/1.0",
            "name": "TopTempConsumingQueries",
            "label": "Max Count",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\":\"5\", \"label\":\"5\",\"selected\":true },\r\n  { \"value\":\"10\", \"label\":\"10\" },\r\n    { \"value\":\"20\", \"label\":\"20\" }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "parameters - 49"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let graphgrain=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\nlet TopQueryIDs = \r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| where Userid_d != 10\r\n|where Temp_blks_written_d >0\r\n| extend Mean_temp_blks = Temp_blks_written_d / Calls_d\r\n| summarize Max_blks = max(Mean_temp_blks) by Queryid_d\r\n| top {TopTempConsumingQueries} by Max_blks desc\r\n| project Queryid_d;\r\n{QueryStoreTable}\r\n| where Userid_d != 10\r\n| where Queryid_d in (TopQueryIDs)\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| extend Mean_temp_blks = Temp_blks_written_d * 8 / Calls_d\r\n| extend  EVENT_TIME_GRAPHGRAIN = bin(todatetime(End_time_t), 1m)\r\n| make-series Max_blks = max(Mean_temp_blks) default = 0 on EVENT_TIME_GRAPHGRAIN from TimeStart to TimeEnd step graphgrain by Queryid_d=strcat('QueryId: ', tolong(Queryid_d))",
        "size": 0,
        "aggregation": 2,
        "title": "Top {TopTempConsumingQueries} Temporary File Generating Queries. Data is plotted at a granularity of {ChartGrain}",
        "timeBrushParameterName": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "crossComponentResources": [
          "{Resource}"
        ],
        "visualization": "areachart",
        "chartSettings": {
          "showLegend": true,
          "ySettings": {
            "numberFormatSettings": {
              "unit": 37,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "query - 46"
    },
    {
      "type": 1,
      "content": {
        "json": "**Shown above are the top {TopTempConsumingQueries} queries which generate temporary bytes or temporary files. ** \r\n\r\n\r\nDetails on these QueryIds are shown below. ",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - 48"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Resource}"
        ],
        "parameters": [
          {
            "id": "98d4f3a7-4057-400a-a84f-cbd61df98051",
            "version": "KqlParameterItem/1.0",
            "name": "QueryIdsByTemp",
            "label": "QueryId Snapshot",
            "type": 2,
            "isRequired": true,
            "query": "let graphgrain=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where Userid_d != 10\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| where Temp_blks_written_d > 0\r\n| extend Mean_blk_rw_time = (Temp_blks_written_d) / Calls_d\r\n| summarize max(Mean_blk_rw_time) by Queryid_d\r\n| top {TopTempConsumingQueries} by max_Mean_blk_rw_time desc\r\n| serialize Rank = row_number()\r\n| project label = Queryid_d, value =  Queryid_d, selected = iff(Rank == 1, true, false)",
            "crossComponentResources": [
              "{Resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "parameters - 40"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let graphgrain=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where Userid_d != 10\r\n| where Queryid_d == '{QueryIdsByTemp}'\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| distinct Mean_time_d,Max_time_d,Min_time_d,Calls_d,Queryid_d,Query_type_s,Temp_blks_read_d,Temp_blks_written_d \r\n| extend Mean_Temp_blks_written = Temp_blks_written_d * 8 / Calls_d\r\n| extend Mean_Temp_blks_read = Temp_blks_read_d * 8 / Calls_d\r\n| summarize MeanTempBlksWritten = avg(Mean_Temp_blks_written), AvgExecutionTime=avg(Mean_time_d), MaxTempBlksWritten = max(Mean_Temp_blks_written), MaxExecutionTime=max(Max_time_d), TotalCalls=sum(Calls_d), MinTempBlksWritten=min(Mean_Temp_blks_written), MinExecutionTime=min(Min_time_d) by Queryid_d,Query_type_s",
        "size": 4,
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "crossComponentResources": [
          "{Resource}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "MeanTempBlksWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "AvgExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxTempBlksWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinTempBlksWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 2,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "AvgIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "AvgReadWriteIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxReadWriteIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinReadWriteIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Start_time",
              "formatter": 6
            },
            {
              "columnMatch": "End_time",
              "formatter": 6
            },
            {
              "columnMatch": "Blk_read_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Blk_write_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_query_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_blk_rw_time",
              "formatter": 8,
              "formatOptions": {
                "palette": "greenRed"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_dataRead",
              "formatter": 8,
              "formatOptions": {
                "palette": "greenRed"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_dataWritten",
              "formatter": 8,
              "formatOptions": {
                "palette": "greenRed"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_blk_rw_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_dataRead",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_dataWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Min_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Max_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "dataRead",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "dataWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Queryid_d",
              "label": "Query Id"
            },
            {
              "columnId": "Query_type_s",
              "label": "Query Type"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "query - 34"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let graphgrain=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where Userid_d != 10\r\n| where Queryid_d == {QueryIdsByTemp}\r\n| distinct Mean_time_d,Max_time_d,Min_time_d,Calls_d,Queryid_d,Query_type_s,Rows_d,Total_time_d,Start_time_t,End_time_t,Plan_id_d,Dbid_d,Userid_d,Temp_blks_written_d,Temp_blks_read_d \r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| extend total_Temp_blks_written = Temp_blks_written_d*8\r\n| extend total_Temp_blks_read = Temp_blks_read_d*8\r\n| extend Mean_Temp_blks_written=Temp_blks_written_d*8/Calls_d\r\n| extend Mean_Temp_blks_read=Temp_blks_read_d*8/Calls_d\r\n//before M26\r\n| summarize WindowStart=min(Start_time_t), WindowEnd=max(End_time_t), MeanTempBlksWritten=avg(Mean_Temp_blks_written),MeanTempBlksRead=avg(Mean_Temp_blks_read),MinTempBlksWritten=min(Mean_Temp_blks_written), MaxTempBlksWritten=max(Mean_Temp_blks_written),MeanRows=sum(Rows_d)/sum(Calls_d),TotalRows=sum(Rows_d),TotalCalls=sum(Calls_d), MeanExecutionTime=avg(Mean_time_d),MinExecutionTime=min(Min_time_d),MaxExecutionTime=max(Max_time_d),TotalExecutionTime=sum(Total_time_d) by bin(todatetime(End_time_t), graphgrain), Queryid_d,Query_type_s,Plan_id_d,Dbid_d,Userid_d\r\n|order by WindowStart asc",
        "size": 0,
        "title": "QueryID {QueryIdsByTemp} runtime statistics split by time buckets of {ChartGrain} each",
        "noDataMessageStyle": 4,
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "crossComponentResources": [
          "{Resource}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "End_time",
              "formatter": 5
            },
            {
              "columnMatch": "WindowStart",
              "formatter": 6
            },
            {
              "columnMatch": "WindowEnd",
              "formatter": 6
            },
            {
              "columnMatch": "MeanTempBlksWritten",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MeanTempBlksRead",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinTempBlksWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxTempBlksWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TotalRows",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "TotalCalls",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "MeanExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TotalExecutionTime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TemporaryBlocksWritten",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TemporaryBlocksRead",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MeanTemporaryBlockWritten",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "MeanTemporaryBlockRead",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              }
            },
            {
              "columnMatch": "MeanIOtime",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MeanDataRead",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MeanDataWrite",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MinIOtime",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TotalIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MeanReadIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MeanWriteIOtime",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Start_time",
              "formatter": 6
            },
            {
              "columnMatch": "Blk_read_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Blk_write_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_query_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_blk_rw_time",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_dataRead",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_dataWritten",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue"
              },
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_blk_rw_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_dataRead",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_dataWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Total_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Min_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Max_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Mean_time",
              "formatter": 0,
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "dataRead",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "dataWritten",
              "formatter": 0,
              "numberFormat": {
                "unit": 3,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Queryid_d",
              "label": "Query Id"
            },
            {
              "columnId": "Query_type_s",
              "label": "Query Type"
            },
            {
              "columnId": "Plan_id_d",
              "label": "Plan Id"
            },
            {
              "columnId": "Dbid_d",
              "label": "Db Id"
            },
            {
              "columnId": "Userid_d",
              "label": "User Id"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "query - 34 - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "\r\n**Temporary Blocks Columns**\r\n\r\n**TemporaryBlocksWritten**: Total number of temp blocks writes by the statement.\r\n\r\n**TemporaryBlocksRead**: Total number of temp blocks reads by the statement.\r\n\r\n\r\n**Details of columns from above grid**\r\n\r\n**MeanTempBlksWritten**: The mean (average) temporary blocks written by the querid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**MeanTempBlksRead**: The mean (average) temporary blocks read by the querid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**MinTempBlksWritten**:The minimum temporary blocks written by the querid in a single call  across the time bucket defined between WindowStart and WindowEnd\r\n\r\n**MaxTempBlksWritten**:The maximum temporary blocks written by the querid in a single call  across the time bucket defined between WindowStart and WindowEnd\r\n\r\n**MeanRows**: The mean (average) rows retrieved or affected by the querid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**TotalCalls**: Total calls in the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**TotalRows**: Total rows retrieved or affected by the querid for all the calls in the time bucket defined between WindowStart and WindowEnd\r\n\r\n**MeanExecutionTime**: The mean (average) execution time of the querid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**MinExecutionTime**: The minimum execution time of the querid in a single call across the time bucket defined between WindowStart and WindowEnd <br>\r\n\r\n**MaxExecutionTime**: The maximum execution time of the querid in a single call across the time bucket defined between WindowStart and WindowEnd <br>\r\n\r\n**TotalExecutionTime**: The total execution time of the querid for all the calls in the time bucket defined between WindowStart and WindowEnd <br>\r\n\r\n\r\n\r\nQueries that generated too many temorrary files or temporary bytes may be ones which are contributing to storage spikes on the server. They are good candidates to further analyze and tune.\r\n",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - 35"
    },
    {
      "type": 1,
      "content": {
        "json": "**How can you retrieve the Query Text for a specific Query ID?**\r\n\r\nTo retrieve the Query Text for a specific Query ID, you need to follow these steps:\r\n\r\n1. Connect to the server using the **`azure_sys`** database where QueryStore is installed. For example, you can use the following command:\r\n```SQL\r\npsql -h ServerName.postgres.database.azure.com -U AdminUsername -d azure_sys\r\n```\r\n\r\n2. Use the generated GetQueryText column to retrieve the Query Text associated with the Query ID.\r\n\r\nIt is important to note that the Query Store retention period applies when querying the database, and older data gets deleted based on the server parameter `pg_qs.retention_period_in_days`. However, our telemetry has a higher retention period.\r\n\r\n**To retrieve the query text for a given Query ID, use the following SQL:**",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - 35 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable} \r\n    | where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n    | where Temp_blks_written_d+Temp_blks_read_d > 0\r\n    | where Userid_d != 10\r\n    | where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n    | extend blk_rw_time=Temp_blks_written_d / Calls_d\r\n    | summarize max(blk_rw_time) by Queryid_d \r\n    | top {TopTempConsumingQueries} by max_blk_rw_time desc\r\n    | extend SQL= strcat(\"SELECT query_sql_text FROM query_store.query_texts_view WHERE query_text_id=\",tolong(Queryid_d),\";\")\r\n    | project SQL",
        "size": 1,
        "title": "Get query_text from QueryId",
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers",
        "crossComponentResources": [
          "{Resource}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "query - 36"
    },
    {
      "type": 1,
      "content": {
        "json": "**Recommendations** \r\n\r\n**1)** Tuning queries identified using explain analyze. More information on EXPLAIN command [can be found here](https://www.postgresql.org/docs/current/sql-explain.html).\r\n\r\n*Query Specific Recommendations*:\r\n\t\r\n\t* Make sure that queries are using the right indices. Create any missing indices.\r\n\t\t\r\n\t* Include columns that are only needed on select statements. \r\n\r\n\t* Avoid unnecessary joins. \r\n\r\n\t* Avoid cross joins that fetches huge amount of data from tables. \r\n\r\n\t* Increase the work_mem parameter. Please maintain caution and change work_mem value. A very high work_mem value will pretty soon lead to Out of memory issues.\r\n\r\n    * Avoid long running transactions on the server. Have statement_timeout or idle_in_transaction_timeout parameter set. \r\n\r\n\r\n**2)** Could also consider enabling local SSD parameter `azure.enable_temp_tablespaces_on_local_ssd` on the server. Follow the link to understand the amount of local SSD available for various SKUs. [Edv4 and Edsv4-series - Azure Virtual Machines | Microsoft Learn](https://learn.microsoft.com/en-us/azure/virtual-machines/edv4-edsv4-series)\r\nConsider current customer SKU and local SSD storage it provides before providing suggestion to customer.\r\n\r\n**3)** Consider adding more storage to server\r\n\r\n** `work_mem`  Guidance **\r\n\r\nThe work_mem parameter specifies the amount of memory to be used by internal sort operations and hash tables before writing to temporary disk files. It\r\nisn't on a per-query basis rather, it's set based on the number of sort and hash operations.\r\n\r\nIf the workload has many short-running queries with simple joins and minimal sort operations, it's advised to keep lower work_mem.\r\nIf there are a few active queries with complex joins and sorts, then it's advised to set a higher value for work_mem.\r\nIt's tough to get the value of work_mem right. If you notice high memory utilization or out-of-memory issues, consider decreasing work_mem.\r\n\r\nA safer setting for work_mem is work_mem = Total RAM / Max_Connections / 16\r\n\r\nThe default value of work_mem = 4 MB. You can set the work_mem value on multiple levels including at the server level via the\r\nparameters page in the Azure portal. A good strategy is to monitor memory consumption during peak times.\r\nIf disk sorts are happening during this time and there's plenty of unused memory, increase work_mem gradually until you're able\r\nto reach a good balance between available and used memory. Similarly, if the memory use looks high, reduce work_mem.\r\n",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "HighTempQueries",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "isQueryStoreEnabled",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "IsServerPrimaryCheck",
          "comparison": "isEqualTo",
          "value": "Yes"
        },
        {
          "parameterName": "temptab",
          "comparison": "isEqualTo",
          "value": "tempqueries"
        }
      ],
      "name": "text - recommendations"
    }
  ],
  "fallbackResourceIds": [],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}