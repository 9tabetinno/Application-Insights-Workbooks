{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Optimizing High Memory Utilization\r\n\r\nThe aim of this workbook is to pinpoint potential reasons for high memory usage and suggest solutions to alleviate the issue. \r\n\r\nHigh memory utilization may arise from various factors, such as a surge in workload, memory-intensive queries, or a rise in the number of server connections.\r\n\r\nThe following table outlines the step-by-step approach to using the workbook to investigate server behavior and improve memory usage.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
              "style": "info"
            },
            "name": "text - 0"
          },
          {
            "type": 1,
            "content": {
              "json": " Step | Observations\r\n--- | ---\r\n**Parameter Selection** | Step 0: Choose the time interval that you wish to analyze.\r\n**Analyzing Memory Usage** | Step 1: Monitor the memory usage on the server. Any sudden increase in values in comparison to previous time intervals should be viewed as abnormal and needs further investigation.\r\n**Validating Memory Parameters** | Step 2: Verify the `work_mem`, `maintenance_work_mem`, `shared_buffers`, `max_connections`, and `max_locks_per_transaction` parameters that are configured on the server. Refer to the `Guidelines for configuring parameters` section to determine the appropriate value for each parameter.\r\n**Analyzing Workload** | Step 3: Check `read` and `write workloads`. Read workload includes select queries and write workload includes insert, update, delete queries. Compare the Memory spike seen in Step 1 with read and write workloads. A surge in workload during the time frame being investigated indicates an increase in server activity. Step 4 and 5 try to identify those read/write queries.\r\n**Analyze Long Running Sessions** | Step 4:  Analyze the `long running sessions` section to identify process IDs(PIDs). Follow the suggested mitigation measures outlined in the section and monitor memory usage accordingly.\r\n**Identify Memory Cosuming queries** | Step 5: Utilize the query store to examine the top 5 queries that consume memory during the time frame being investigated, as listed in the `Top Memory Consuming Queries From Query Store` section. Take the recommended remedial actions in the section and track memory usage. If the server being used is a read replica, refer to the `Top Queries by Duration from PostgreSQL Logs` section for the top queries sorted by duration.\r\n**Analyzing Connection Patterns** | Step 6: Understand connectivity patterns from `Total User Only Connections` section. Follow the suggested mitigation measures provided in the section and continue to monitor memory usage."
            },
            "customWidth": "70",
            "name": "text - 1"
          }
        ],
        "exportParameters": true
      },
      "name": "WorkbookHeader"
    },
    {
      "type": 1,
      "content": {
        "json": "**Workbook contents**: \r\n"
      },
      "name": "text - 29"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "bullets",
        "links": [
          {
            "id": "0f0da63a-e187-4b85-93d4-d6094e6afc80",
            "cellValue": "Memory Utilization",
            "linkTarget": "step",
            "linkLabel": "Memory Utilization",
            "style": "link"
          },
          {
            "id": "c73d4781-7b84-469c-984f-ae3b5a56e2c4",
            "cellValue": "Parameter Guidance",
            "linkTarget": "step",
            "linkLabel": "Guidelines for configuring parameters",
            "style": "link"
          },
          {
            "id": "82db9dff-3905-4b18-befc-238b7434a394",
            "cellValue": "Read Write Workload Details",
            "linkTarget": "step",
            "linkLabel": "Workload Details",
            "style": "link"
          },
          {
            "id": "cca531d7-aa39-46ce-9609-fbd792464542",
            "cellValue": "Long Running Sessions",
            "linkTarget": "step",
            "linkLabel": "Long Running Sessions",
            "style": "link"
          },
          {
            "id": "13197142-64a6-4000-88ba-f7e349b3b9d3",
            "cellValue": "Top Memory Consuming Queries ",
            "linkTarget": "step",
            "linkLabel": "Top Memory Consuming Queries",
            "style": "link"
          },
          {
            "id": "c6178eee-47a5-438e-b7c8-f56a936abf67",
            "cellValue": "TotalConnections",
            "linkTarget": "step",
            "linkLabel": "Total User Only Connections",
            "style": "link"
          }
        ]
      },
      "name": "links - 35"
    },
    {
      "type": 1,
      "content": {
        "json": "#### Start by setting the following parameters for the incident server:\r\n"
      },
      "name": "text - 32"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "ad4f3a3b-ec2f-4483-8b9f-968bacd5c444",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "includeAll": true,
              "showDefault": false
            },
            "value": null
          },
          {
            "id": "9ebd8e9a-5e9c-496a-bdb1-e41b9faaf9ad",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "value": {
              "durationMs": 604800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "label": "TimeRange (Local Time)"
          },
          {
            "id": "6573f642-b4c6-4a56-8bdd-8ef451b7bdf5",
            "version": "KqlParameterItem/1.0",
            "name": "Resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false,
              "componentIdOnly": true
            }
          },
          {
            "id": "233ae05f-0f3d-4463-b8ec-579074b35c53",
            "version": "KqlParameterItem/1.0",
            "name": "MIN_TIME_WINDOW_SEC",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "3600"
                }
              }
            ]
          },
          {
            "id": "655143e7-f5f6-4d8a-81f9-9aa8c49e2520",
            "version": "KqlParameterItem/1.0",
            "name": "READ_WORKLOAD_SPIKE_TUP_RETURNED_PCT",
            "type": 1,
            "description": "Defines the minimum % difference in tuples returned between intervals to classify a read workload spike. ",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "50"
                }
              }
            ]
          },
          {
            "id": "e43a4f05-b912-4815-870d-e22141b050fc",
            "version": "KqlParameterItem/1.0",
            "name": "WINDOW_SIZE_FOR_QUERY_TIME_CAPTURE",
            "type": 1,
            "description": "Specifies aggregation window to capture max query time for high time consuming queries ",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "30m"
                }
              }
            ]
          },
          {
            "id": "ae53554f-de54-4978-8204-a7f1147a8ad1",
            "version": "KqlParameterItem/1.0",
            "name": "SHORT_CONNECTION_DURATION",
            "type": 1,
            "description": "Defines the max time a connection may exist and be classified as short lived ",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "1s"
                }
              }
            ]
          },
          {
            "id": "5d46fb4c-f381-429f-8395-fcff2e7bf1f9",
            "version": "KqlParameterItem/1.0",
            "name": "LONG_CONNECTION_DURATION",
            "type": 1,
            "description": "Defines the minimum time a connection may exist before it is classified as long lived",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "20m"
                }
              }
            ]
          },
          {
            "id": "089a8ccf-b6cb-4f68-adff-2bef115928ae",
            "version": "KqlParameterItem/1.0",
            "name": "QueryStoreTable",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "AzureDiagnostics"
                }
              }
            ]
          },
          {
            "id": "e5f4fc66-344a-4a21-b495-f5cc20c3ec1a",
            "version": "KqlParameterItem/1.0",
            "name": "SessionsTable",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "AzureDiagnostics"
                }
              }
            ]
          },
          {
            "id": "50d73c33-57bd-4010-b262-b1b32cf9be16",
            "version": "KqlParameterItem/1.0",
            "name": "PGServerLogsTable",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "AzureDiagnostics"
                }
              }
            ]
          },
          {
            "id": "bfdc4660-2f41-45fb-b2f2-52df7b9afe9d",
            "version": "KqlParameterItem/1.0",
            "name": "IsServerPrimaryAPI",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..replicationRole\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "queryType": 12
          },
          {
            "id": "7eebfb68-bca9-4489-a30a-9000d4a3f139",
            "version": "KqlParameterItem/1.0",
            "name": "IsServerPrimaryCheck",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "IsServerPrimaryAPI",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "Primary",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ]
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 0"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "bullets",
        "links": [
          {
            "id": "7d7cf140-a585-4384-95d7-25df36db55b5",
            "cellValue": "Memory Utilization",
            "linkTarget": "step",
            "linkLabel": "Memory Utilization",
            "style": "link"
          },
          {
            "id": "078f25ba-fba4-4369-bdf7-792cfac885fa",
            "cellValue": "Parameter Guidance",
            "linkTarget": "step",
            "linkLabel": "Guidelines for configuring parameters",
            "style": "link"
          },
          {
            "id": "5b397226-f045-4fae-aa8c-e2eaa26cceca",
            "cellValue": "Read Write Workload Details",
            "linkTarget": "step",
            "linkLabel": "Workload Details",
            "style": "link"
          },
          {
            "id": "32416268-a378-4830-bbc8-7a6cb70d724b",
            "cellValue": "Long Running Sessions",
            "linkTarget": "step",
            "linkLabel": "Long Running Sessions",
            "style": "link"
          },
          {
            "id": "3a21608a-7f09-4505-8739-c6cfa4395415",
            "cellValue": "QueriesFromPGLogs",
            "linkTarget": "step",
            "linkLabel": "Top Queries by Duraiton from PostgreSQL Logs",
            "style": "link"
          },
          {
            "id": "e8cf167a-d7a4-4361-9ef9-aace819e8f6c",
            "cellValue": "TotalConnections",
            "linkTarget": "step",
            "linkLabel": "Total User Only Connections",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isEqualTo",
        "value": "y"
      },
      "name": "links - 35 - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "704d5614-ed6d-4c13-9815-1191a5b3405f",
            "version": "KqlParameterItem/1.0",
            "name": "QueryStoreCheck",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/configurations/pg_qs.query_capture_mode?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[]}}]}",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 12
          },
          {
            "id": "76ce0100-a026-476d-ae00-ba949676344f",
            "version": "KqlParameterItem/1.0",
            "name": "isQueryStoreEnabled",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "QueryStoreCheck",
                  "operator": "!=",
                  "rightValType": "static",
                  "rightVal": "none",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "5532b5f0-37c7-448d-9d54-57a5bef6d9a7",
            "version": "KqlParameterItem/1.0",
            "name": "IsMetricsCollectorDatabaseActivityOn",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/configurations/metrics.collector_database_activity?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[]}}]}",
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 12
          },
          {
            "id": "19084cea-df53-4686-8be8-24e01d204bc0",
            "version": "KqlParameterItem/1.0",
            "name": "IsMetricCollectorON",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "IsMetricsCollectorDatabaseActivityOn",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "ON",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "f25f8d3a-a6c6-4e4e-928a-48c2848c2377",
            "version": "KqlParameterItem/1.0",
            "name": "AzureDiagAPIAllLogs",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..logs[?(@.categoryGroup=='allLogs')].enabled\",\"columns\":[]}}]}",
            "queryType": 12
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "AureDiagAPIQueryStoreRuntime",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..logs[?(@.category=='PostgreSQLFlexQueryStoreRuntime')].enabled\",\"columns\":[]}}]}",
            "queryType": 12,
            "id": "8ab18b25-f6ea-4009-b422-50a28564ab50"
          },
          {
            "id": "b9cb29ff-a3f6-439e-8c89-92078ef449e2",
            "version": "KqlParameterItem/1.0",
            "name": "IsQueryStoreRuntimeSentToLogAnalytics",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIAllLogs",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "AureDiagAPIQueryStoreRuntime",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "AzureDiagAPIPostgreSQLFlexSessions",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..logs[?(@.category=='PostgreSQLFlexSessions')].enabled\",\"columns\":[]}}]}",
            "queryType": 12,
            "id": "77b917e4-3fc5-476a-b334-c2c73ffd2eca"
          },
          {
            "id": "008959b3-85f0-49b7-810b-c1813739baaa",
            "version": "KqlParameterItem/1.0",
            "name": "IsPostgreSQLFlexSessionsSentToLogAnalytics",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIAllLogs",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIPostgreSQLFlexSessions",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "AzureDiagAPIMetrics",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..metrics[?(@.category=='AllMetrics')].enabled\",\"columns\":[]}}]}",
            "queryType": 12,
            "id": "820c92d6-d676-40ab-b549-2c0849c15363"
          },
          {
            "id": "c6e74dda-d69b-4b91-9720-47a879d0a370",
            "version": "KqlParameterItem/1.0",
            "name": "IsAllMetricsSentToLogAnalytics",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIMetrics",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "AzureDiagAPIPostgreSQLLogs",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..properties..logs[?(@.category=='PostgreSQLLogs')].enabled\",\"columns\":[]}}]}",
            "queryType": 12,
            "id": "1213bf9c-7779-4cc2-b542-e058f42101b2"
          },
          {
            "id": "6d2342b4-a239-4458-b7c9-3c04cde9f4be",
            "version": "KqlParameterItem/1.0",
            "name": "IsPostgreSQLLogsSentToLogAnalytics",
            "type": 1,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIAllLogs",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "AzureDiagAPIPostgreSQLLogs",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "9ff4cdf5-003a-4cdd-b8b5-401ee477ce74",
            "version": "KqlParameterItem/1.0",
            "name": "LogMinDuraitonStatementAPI",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/configurations/log_min_duration_statement?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 12
          },
          {
            "id": "cc86ab24-f1d8-4f5d-a667-23b756d0f0d5",
            "version": "KqlParameterItem/1.0",
            "name": "IsLogMinDurationStatementEnabled",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "LogMinDuraitonStatementAPI",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "-1",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a187eaef-08c5-47bb-85bc-827ab2c8f4ea",
            "version": "KqlParameterItem/1.0",
            "name": "IsLogLinePrefixAPI",
            "type": 1,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{Resource}/configurations/log_line_prefix?api-version=2022-12-01\",\"urlParams\":[],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$..value\",\"columns\":[]}}]}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 12
          },
          {
            "id": "669f87e3-681c-4325-8f66-2a69d8293551",
            "version": "KqlParameterItem/1.0",
            "name": "IsLogLinePrefixSame",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "IsLogLinePrefixAPI",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "%t-%c user=%u,db=%d,app=%a,client=%h",
                  "resultValType": "static",
                  "resultVal": "Yes"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "No"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isEqualTo",
        "value": "y"
      },
      "name": "ValidationsParameters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### Query Store is currently disabled\r\nThis workbook depends on Query Store data. You need to enable it by setting the dynamic server parameter `pg_qs.query_capture_mode` to either ALL or TOP, and configuring the Diagnostic Settings destination to log analytics. Please refer to the following guide for detailed instructions: https://learn.microsoft.com/azure/postgresql/flexible-server/howto-configure-and-access-logs.",
              "style": "error"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "isQueryStoreEnabled",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "QSError1"
          },
          {
            "type": 1,
            "content": {
              "json": "### The Query Store data is not being transmitted to the log analytics workspace\r\nThe Query Store data is not being sent to the log analytics workspace, which is necessary to use this workbook. To configure the logging settings for Query Store categories(`PostgreSQL Query Store Runtime` & `PostgreSQL Query Store Wait Statistics`) and send the data to a log analytics workspace, please refer to this guide for detailed instructions: https://learn.microsoft.com/azure/postgresql/flexible-server/howto-configure-and-access-logs.",
              "style": "error"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "isQueryStoreEnabled",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsQueryStoreRuntimeSentToLogAnalytics",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "QSError2"
          },
          {
            "type": 1,
            "content": {
              "json": "### The PostgreSQL server logs data is not being transmitted to the log analytics workspace\r\nThe PostgreSQL server logs data is not being sent to the log analytics workspace, which is necessary to use this workbook. To configure the logging settings for category `PostgreSQL Server Logs` and send the data to a log analytics workspace, please refer to this guide for detailed instructions: https://learn.microsoft.com/azure/postgresql/flexible-server/howto-configure-and-access-logs.",
              "style": "error"
            },
            "conditionalVisibility": {
              "parameterName": "IsPostgreSQLLogsSentToLogAnalytics",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "PGLogsError"
          },
          {
            "type": 1,
            "content": {
              "json": "### The PostgreSQL Sessions logs data is not being transmitted to the log analytics workspace\r\nThe PostgreSQL Sessions logs data is not being sent to the log analytics workspace, which is necessary to use this workbook. To configure the logging settings for category `PostgreSQL Sessions` and send the data to a log analytics workspace, please refer to this guide for detailed instructions: https://learn.microsoft.com/azure/postgresql/flexible-server/howto-configure-and-access-logs.",
              "style": "error"
            },
            "conditionalVisibility": {
              "parameterName": "IsPostgreSQLFlexSessionsSentToLogAnalytics",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "PGSessionError"
          },
          {
            "type": 1,
            "content": {
              "json": "### Enhanced Metrics are currently disabled.\r\nThis workbook requires the use of enhanced metrics. To activate these metrics, simply enable the dynamic server parameter `metrics.collector_database_activity`.",
              "style": "error"
            },
            "conditionalVisibility": {
              "parameterName": "IsMetricCollectorON",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "text - 57 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Query tracking through `log_min_duration_statement` is currently disabled\r\nTo enable query tracking, you can set an appropriate threshold for the `log_min_duration_statement` parameter and properly configure `log_line_prefix` parameter to include the relevant details such as **%t-%c user=%u,db=%d,app=%a,client=%h**  through the Azure portal. This dynamic parameter determines the minimum duration of a query before it's logged in the PostgreSQL server logs. \r\n",
              "style": "error"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsLogMinDurationStatementEnabled",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "text - 2"
          }
        ],
        "exportParameters": true
      },
      "name": "Errors"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Memory Utilization",
        "expandable": true,
        "expanded": true,
        "items": [
          {
            "type": 10,
            "content": {
              "chartId": "workbook7f70739f-94e7-4a64-8af6-494380041c21",
              "version": "MetricsItem/2.0",
              "size": 0,
              "chartType": 2,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers",
              "metricScope": 0,
              "resourceParameter": "Resource",
              "resourceIds": [
                "{Resource}"
              ],
              "timeContextFromParameter": "TimeRange",
              "timeContext": {
                "durationMs": 604800000
              },
              "metrics": [
                {
                  "namespace": "microsoft.dbforpostgresql/flexibleservers",
                  "metric": "microsoft.dbforpostgresql/flexibleservers-Saturation-memory_percent",
                  "aggregation": 3,
                  "splitBy": null
                }
              ],
              "title": "Maximum percentage of memory in use",
              "showCreateAlertRule": true,
              "timeBrushParameterName": "TimeRange",
              "timeBrushExportOnlyWhenBrushed": true,
              "gridSettings": {
                "rowLimit": 10000
              }
            },
            "name": "metric - 57"
          },
          {
            "type": 1,
            "content": {
              "json": "#### PostgreSQL can use high memory in various scenarios, including:\r\n\r\n- **Large amounts of data:** As the amount of data stored in a database increases, the memory required to access and manipulate that data also increases. If your database contains many tables or large tables with many columns, this can consume a lot of memory. To find more information, please refer to the section on **Read Write Workload Details** in this workbook.\r\n\r\n- **Large transactions:** Transactions that modify many rows or tables can consume a significant amount of memory, especially if the changes involve indexes or triggers. If the transaction is not committed or rolled back in a timely manner, it can keep locks and buffers in memory, causing high memory usage. To find more information, please refer to the section on **Long Running Sessions** in this workbook.\r\n\r\n- **Complex queries:** Queries that involve multiple joins, subqueries, or aggregates can require significant amounts of memory to execute. If these queries are not optimized or tuned correctly, they can consume excessive memory. To find more information, please refer to the section on **Top Memory Consuming Queries From Query Store** or If the server being used is a read replica, refer to the **Top Queries by Duration from PostgreSQL Logs** section in this workbook.\r\n\r\n- **Concurrent connections**: If your application has many concurrent connections to the database, each connection will consume a certain amount of memory. If the connections are not properly managed or if the database server is not configured to handle a large number of connections, this can lead to high memory usage. To find more information, please refer to the section on **Total User Only Connections** in this workbook.\r\n\r\nTo manage memory usage in PostgreSQL, it is important to properly configure server parameters, optimize queries, and monitor the system's memory usage.",
              "style": "info"
            },
            "name": "text - 2"
          }
        ],
        "exportParameters": true
      },
      "name": "Memory Utilization",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Guidelines for configuring parameters.",
        "expandable": true,
        "expanded": true,
        "loadType": "explicit",
        "loadButtonText": "Show guidelines for configuring parameters",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "#### work_mem\r\n\r\nThe ``work_mem`` parameter is an important setting that determines the amount of memory allocated for internal sorting and hash table operations before data is written to temporary disk files. Unlike some other parameters, `work_mem` is not set on a per-query basis, but rather dynamically adjusted based on the number and complexity of sorting and hash operations that are being performed.\r\n\r\nFor workloads that involve many short-running queries with simple joins and minimal sorting, it is advisable to keep `work_mem` at a lower value. However, if there are a few active queries with complex joins and sorts, a higher value for `work_mem` may be more appropriate. Setting the value of `work_mem` correctly can be a challenge, but if you notice high memory usage or out-of-memory errors, reducing `work_mem` may be necessary.\r\n\r\nA good rule of thumb for setting `work_mem` is to use the formula **work_mem = Total RAM / Max_Connections / 16**. This can provide a safer starting point for adjusting the parameter.\r\n\r\nBy default, `work_mem` is set to 4 MB, but it can be customized at various levels, including at the server level via the parameters page in the Azure portal. It is recommended to monitor memory consumption during peak times, and gradually increase `work_mem` if disk sorts are occurring and there is unused memory. Conversely, if memory usage is high, decreasing `work_mem` may be necessary to achieve a better balance between available and used memory.",
              "style": "info"
            },
            "name": "text - 1"
          },
          {
            "type": 1,
            "content": {
              "json": "#### maintenance_work_mem\r\n\r\nMaintenance tasks such as vacuuming, index addition, and foreign key insertion require a dedicated memory allocation called `maintenance_work_mem`. This memory usage is specific to each session.\r\n\r\nFor instance, suppose there are three autovacuum workers running simultaneously. In that case, a `maintenance_work_mem` value of 1 GB will result in a total memory usage of 3 GB across all sessions.\r\n\r\nHowever, it's important to note that setting a high `maintenance_work_mem` value coupled with multiple concurrent sessions performing maintenance tasks can result in excessive memory usage. In Azure Database for Flexible Server, the maximum permissible value for the `maintenance_work_mem` server parameter is 2 GB.",
              "style": "info"
            },
            "name": "text - 2"
          },
          {
            "type": 1,
            "content": {
              "json": "#### shared_buffers\r\n\r\nThe `shared_buffers` configuration parameter specifies the amount of memory allocated by the server to cache data, with the aim of minimizing disk I/O.\r\n\r\nIt's generally recommended to allocate around 25% of available RAM to `shared_buffers`, although the maximum permissible value can be set to 40% of available RAM. This helps to ensure efficient use of memory resources and optimal performance.\r\n\r\nBy utilizing `shared_buffers` to cache frequently accessed data, the server can significantly reduce the amount of I/O operations needed to fetch data from disk, resulting in faster query processing times and improved overall system performance. However, it's important to balance the allocation of memory resources between `shared_buffers` and other system components to prevent excessive memory usage and potential performance issues.",
              "style": "info"
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": "#### max_locks_per_transaction\r\n\r\nThe `max_locks_per_transaction` parameter controls the maximum number of database objects that can be locked concurrently during a single transaction. By default, this value is set to 64.\r\n\r\nIncreasing the value of `max_locks_per_transaction` may result in higher memory consumption on the server, which can potentially impact system performance. It's important to carefully consider the appropriate value for this parameter based on the specific requirements of your application.\r\n\r\nFurthermore, modifying the value of `max_locks_per_transaction` requires a restart of the database server. As such, it's essential to plan any changes to this parameter carefully and ensure that they are performed during a maintenance window or other scheduled downtime to minimize disruption to application users.",
              "style": "info"
            },
            "name": "text - 3 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "#### max_connections\r\n\r\nThe `max_connections` parameter specifies the maximum number of concurrent database connections that the server can accept. It's important to set this parameter to a value that is appropriate for the expected workload and usage patterns of your application.\r\n\r\nConfiguring `max_connections` incorrectly can lead to a range of issues, including degraded system performance, connection timeouts, and potential system crashes. To ensure optimal performance and stability, it's essential to review the [documentation](https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/concepts-limits) and follow best practices when setting the `max_connections` parameter.",
              "style": "info"
            },
            "name": "text - 3 - Copy - Copy"
          }
        ],
        "exportParameters": true
      },
      "name": "Parameter Guidance",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Workload Details",
        "expandable": true,
        "expanded": true,
        "loadType": "explicit",
        "loadButtonText": "Show Read Write Workload Details",
        "items": [
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": "### The Enhanced Metrics are disabled on server. To obtain additional information, please refer to the error message located at the top of the workbook.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "IsMetricCollectorON",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "text - 2"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Read workload details\r\n\r\n**Tup_fetched** and **Tup_returned** are two metrics that measure the number of rows read from a table by a PostgreSQL read workload.\r\n\r\nTup_fetched indicates the total number of live rows that have been fetched from a table using sequential scan and index entries returned by index scans in database, regardless of whether they are already in the cache or need to be read from disk. This metric provides insights into the overall data read using sequential scans.\r\n\r\nOn the other hand, tup_returned measures the number of live rows that are fetched by index scans in this database. This metric is incremented only when a row is actually comes form index scan, so it can provide insight into the efficiency of the query execution.\r\n\r\nBy monitoring these two metrics, administrators can gain a better understanding of the performance of their PostgreSQL read workloads.",
                    "style": "info"
                  },
                  "name": "text - 7"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookb945890e-3384-4f08-8518-0515c1c5b144",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "metricScope": 0,
                    "resourceParameter": "Resource",
                    "resourceIds": [
                      "{Resource}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
                        "aggregation": 1,
                        "splitBy": null,
                        "columnName": "Tuples Fetched"
                      },
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
                        "aggregation": 1,
                        "columnName": "Tuples Returned"
                      }
                    ],
                    "title": "Read workload details",
                    "showCreateAlertRule": true,
                    "filters": [
                      {
                        "id": "3",
                        "key": "DatabaseName",
                        "operator": 1,
                        "values": [
                          "azure_maintenance",
                          "azure_sys"
                        ]
                      }
                    ],
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "name": "Read workload details"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**The read workload metric calculates the total number of tuples fetched and returned, but it does not include databases like `azure_sys` and `azure_maintenance`.**",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "isReadWorkloadHigh",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 31"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookb945890e-3384-4f08-8518-0515c1c5b144",
                    "version": "MetricsItem/2.0",
                    "size": 1,
                    "chartType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "metricScope": 0,
                    "resourceParameter": "Resource",
                    "resourceIds": [
                      "{Resource}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
                        "aggregation": 1,
                        "splitBy": "DatabaseName",
                        "splitBySortOrder": -1,
                        "splitByLimit": 50
                      },
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
                        "aggregation": 1,
                        "splitBy": "DatabaseName",
                        "splitBySortOrder": -1,
                        "splitByLimit": 50
                      }
                    ],
                    "title": "Tup_fetched & Tup_returned by Database",
                    "gridFormatType": 2,
                    "showCreateAlertRule": true,
                    "filters": [
                      {
                        "id": "1",
                        "key": "DatabaseName",
                        "operator": 1,
                        "values": [
                          "azure_maintenance",
                          "azure_sys"
                        ]
                      }
                    ],
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "showRefreshButton": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Timeline",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": ".*\\/Tuples Returned$",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Tuples Returned Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Tuples Returned",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "Metric",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Aggregation",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Value",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 10000,
                      "labelSettings": [
                        {
                          "columnId": "Segment",
                          "label": "Database"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
                          "label": "Tuples Fetched (Preview) (Sum)"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched Timeline",
                          "label": "Tuples Fetched (Preview) (Sum) Timeline"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
                          "label": "Tuples Returned (Preview) (Sum)"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned Timeline",
                          "label": "Tuples Returned (Preview) (Sum) Timeline"
                        }
                      ]
                    },
                    "sortBy": [],
                    "showExportToExcel": true
                  },
                  "name": "Tup_fetched by Database - Copy"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibility": {
              "parameterName": "IsMetricsCollectorDatabaseActivityOn",
              "comparison": "isEqualTo",
              "value": "ON"
            },
            "name": "Read workload"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Write workload details \r\nThe number of tuples that have been inserted, updated, or deleted are critical for understanding the overall performance of the database and for identifying potential inefficiencies.\r\n\r\n**Tuples inserted** represents the number of rows that have been inserted into the database. This metric is particularly useful for monitoring the growth of the database and for assessing the effectiveness of bulk insert operations.\r\n\r\n**Tuples updated** measures the number of rows that have been updated in the database. This metric can help identify queries that are executing inefficiently or that are causing contention within the database.\r\n\r\n**Tuples deleted** represents the number of rows that have been deleted from the database. This metric can help identify queries that are causing excessive data churn or that are deleting more data than is necessary.\r\n\r\nBy monitoring these metrics, administrators can gain insights into the performance of their PostgreSQL write workloads and make data-driven decisions to optimize the database.\r\n\r\n",
                    "style": "info"
                  },
                  "name": "text - 4"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook5576f52a-daae-4bd6-8b6e-333f5de05ac1",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "metricScope": 0,
                    "resourceParameter": "Resource",
                    "resourceIds": [
                      "{Resource}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
                        "aggregation": 1,
                        "splitBy": null,
                        "columnName": "Tuples Inserted"
                      },
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
                        "aggregation": 1,
                        "columnName": "Tuples Updated"
                      },
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
                        "aggregation": 1,
                        "columnName": "Tuples Deleted"
                      }
                    ],
                    "title": "Write Workload Metrics",
                    "showCreateAlertRule": true,
                    "filters": [
                      {
                        "id": "2",
                        "key": "DatabaseName",
                        "operator": 1,
                        "values": [
                          "azure_maintenance",
                          "azure_sys"
                        ]
                      }
                    ],
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "name": "Write Workload Metric"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**The write workload metric calculates the total number of inserted, updated, and deleted tuples, but it does not include databases like `azure_sys` and `azure_maintenance`.**\r\n\r\n",
                    "style": "info"
                  },
                  "name": "text - 12"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookb945890e-3384-4f08-8518-0515c1c5b144",
                    "version": "MetricsItem/2.0",
                    "size": 1,
                    "chartType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "metricScope": 0,
                    "resourceParameter": "Resource",
                    "resourceIds": [
                      "{Resource}"
                    ],
                    "timeContextFromParameter": "TimeRange",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
                        "aggregation": 1,
                        "splitBy": "DatabaseName",
                        "splitBySortOrder": -1,
                        "splitByLimit": 50
                      },
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
                        "aggregation": 1,
                        "splitBy": "DatabaseName",
                        "splitBySortOrder": -1,
                        "splitByLimit": 50
                      },
                      {
                        "namespace": "microsoft.dbforpostgresql/flexibleservers",
                        "metric": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
                        "aggregation": 1,
                        "splitBy": "DatabaseName",
                        "splitBySortOrder": -1,
                        "splitByLimit": 50
                      }
                    ],
                    "title": "Tuples Inserted, Updated & Deleted by Database",
                    "gridFormatType": 2,
                    "showCreateAlertRule": true,
                    "filters": [
                      {
                        "id": "1",
                        "key": "DatabaseName",
                        "operator": 1,
                        "values": [
                          "azure_maintenance",
                          "azure_sys"
                        ]
                      }
                    ],
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "showRefreshButton": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Timeline",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_fetched",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_returned",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": ".*\\/Tuples Returned$",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Tuples Returned Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Tuples Returned",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "Metric",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Aggregation",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Value",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 10000,
                      "labelSettings": [
                        {
                          "columnId": "Segment",
                          "label": "Database"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted",
                          "label": "Tuples Inserted (Preview) (Sum)"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_inserted Timeline",
                          "label": "Tuples Inserted (Preview) (Sum) Timeline"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated",
                          "label": "Tuples Updated (Preview) (Sum)"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_updated Timeline",
                          "label": "Tuples Updated (Preview) (Sum) Timeline"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted",
                          "label": "Tuples Deleted (Preview) (Sum)"
                        },
                        {
                          "columnId": "microsoft.dbforpostgresql/flexibleservers-Database (Preview)-tup_deleted Timeline",
                          "label": "Tuples Deleted (Preview) (Sum) Timeline"
                        }
                      ]
                    },
                    "sortBy": [],
                    "showExportToExcel": true
                  },
                  "name": "Tup_fetched by Database - Copy"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsMetricsCollectorDatabaseActivityOn",
                "comparison": "isEqualTo",
                "value": "ON"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "Write Workload"
          }
        ],
        "exportParameters": true
      },
      "name": "Read Write Workload Details",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Resource}"
        ],
        "parameters": [
          {
            "id": "62507ec3-c7bd-4ef2-b0c5-69eddf960a36",
            "version": "KqlParameterItem/1.0",
            "name": "GlobalEndTime",
            "type": 1,
            "query": "// GlobalEndTime will always equal TimeRange:end\r\n// In the case which selected interval is less than an hour, \r\n// we set GlobalStartTime to be an hour before GlobalEndTime\r\n// in order to avoid showing data \"in the future\".\r\n//print iff(true, totimespan({TimeRange:end}), totimespan({TimeRange:end}))\r\n\r\nlet dt = {TimeRange:end};\r\nprint iff(dt<now(), dt, now())\r\n\r\n",
            "crossComponentResources": [
              "{Resource}"
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "25ec8def-09e9-4f9a-9b24-ac5fbe85ebf2",
            "version": "KqlParameterItem/1.0",
            "name": "GlobalStartTime",
            "type": 1,
            "query": "// GlobalEndTime will always equal TimeRange:end\r\n// In the case which selected interval is less than an hour, \r\n// we set GlobalStartTime to be an hour before GlobalEndTime\r\n// in order to avoid showing data \"in the future\".\r\n//print iff(true, totimespan({TimeRange:end}), totimespan({TimeRange:end}))\r\nprint iff (datetime_diff('second',{TimeRange:end},{TimeRange:start})<={MIN_TIME_WINDOW_SEC},todatetime('{GlobalEndTime}')-{MIN_TIME_WINDOW_SEC}s,{TimeRange:start})",
            "crossComponentResources": [
              "{Resource}"
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "477ec0d7-9343-498c-9124-6ab8e638c20c",
            "version": "KqlParameterItem/1.0",
            "name": "LessThanOneHourInterval",
            "type": 1,
            "query": "let interval = 1h;\r\nprint iff({TimeRange:end} - {TimeRange:start} < interval, \"Yes\", \"No\")",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "12190a81-5bc8-482b-a8e7-0848ca226af0",
            "version": "KqlParameterItem/1.0",
            "name": "ChartGrain",
            "type": 1,
            "query": "let trange=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nprint case(\r\n    trange<1h, strcat(format_timespan(trange,'m'),' minute(s)'),\r\n    trange>=1h and trange<1d, strcat(format_timespan(trange,'H'),' hour(s)') ,\r\n    strcat(format_timespan(trange,'dd'),' day(s)')\r\n);",
            "crossComponentResources": [
              "{Resource}"
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "ca92282b-f0b5-4fc6-a16e-abfb25ea50d7",
            "version": "KqlParameterItem/1.0",
            "name": "MetricsGrain",
            "type": 1,
            "query": "print case(\r\n    {TimeRange:grain}<1h, strcat(format_timespan({TimeRange:grain},'m'),' minute(s)'),\r\n    {TimeRange:grain}>=1h and {TimeRange:grain}<1d, strcat(format_timespan({TimeRange:grain},'H'),' hour(s)') ,\r\n    strcat(format_timespan({TimeRange:grain},'dd'),' day(s)')\r\n);",
            "crossComponentResources": [
              "{Resource}"
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "fcb97dc5-c1da-472b-922d-85b781bc92d5",
            "version": "KqlParameterItem/1.0",
            "name": "ChartGrainMin5",
            "type": 1,
            "query": "let trange=iff({TimeRange:grain}<5m,5m, {TimeRange:grain});\r\nprint case(\r\n    trange<1h, strcat(format_timespan(trange,'m'),' minute(s)'),\r\n    trange>=1h and trange<1d, strcat(format_timespan(trange,'H'),' hour(s)') ,\r\n    strcat(format_timespan(trange,'dd'),' day(s)')\r\n);",
            "crossComponentResources": [
              "{Resource}"
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "b0de7bc2-e822-4ca6-9f82-ecb2ded5c03a",
            "version": "KqlParameterItem/1.0",
            "name": "IsConnectionDataExists",
            "type": 1,
            "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('template1','template0', 'azure_maintenance','azure_sys')\r\n| where State_s !=\"\"\r\n| count\r\n| extend conndata = iff((Count) >= 1 , \"Yes\", \"No\")\r\n| project conndata",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "13493d5d-94fa-4d7b-b2e4-d0093df962a8",
            "version": "KqlParameterItem/1.0",
            "name": "HighMemoryQueries",
            "type": 1,
            "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where Userid_d != 10 // exclude azure super user \r\n |extend Mean_memory_blks=(Shared_blks_hit_d + Shared_blks_dirtied_d)/Calls_d\r\n| summarize Max_blks = max(Mean_memory_blks) by Queryid_d\r\n|where Max_blks >0\r\n| count\r\n    | extend HaveQueryIds = iff(Count > 0, \"Yes\", \"No\")\r\n    | project HaveQueryIds",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "d1b7e82d-16bc-4de0-aadb-93a70f3926a0",
            "version": "KqlParameterItem/1.0",
            "name": "existsLongRunningSessionsData",
            "type": 1,
            "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_sys','azure_maintenance')\r\n| extend Connection_duration_sec = datetime_diff('second',todatetime(Collection_time_t),todatetime(Backend_start_t))\r\n| summarize  Connection_duration_sec=max(Connection_duration_sec)  by Pid_d,Backend_type_s\r\n|limit 1\r\n| count\r\n| extend result=iff(Count>0, 'Yes','No')\r\n| project result\r\n",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "fa1e16b1-ea89-4893-b72d-f4353dee75d5",
            "version": "KqlParameterItem/1.0",
            "name": "IsPostgreSQLServerLogsDataExists",
            "type": 1,
            "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{PGServerLogsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category == \"PostgreSQLLogs\"\r\n| where Message contains \"disconnection\"\r\n| distinct TimeGenerated,timestamp_s,Message\r\n| extend DisconnectTime=todatetime(timestamp_s)\r\n| extend allmatches=extract_all(@'session.time:(.+)user=(.+)database=(.+)host=(.+).port', Message)\r\n| extend duration=totime(allmatches[0][0])\r\n| extend user=trim(@\" \",tostring(allmatches[0][1]) )\r\n| extend database=tostring(allmatches[0][2])\r\n| extend IP=tostring(allmatches[0][3])\r\n| where user !in ('azuresu','replication')\r\n| count\r\n| extend logsdata = iff((Count) >= 1 , \"Yes\", \"No\")\r\n| project logsdata",
            "crossComponentResources": [
              "{Resource}"
            ],
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "600b0496-e355-4481-ab01-695bcef8c5ba",
            "version": "KqlParameterItem/1.0",
            "name": "IsLogMinDurationDataExists",
            "type": 1,
            "query": "let TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{PGServerLogsTable}\r\n| where Category == \"PostgreSQLLogs\"\r\n| where TimeGenerated >= TimeStart and TimeGenerated <= TimeEnd\r\n| where Message contains \"duration:\"\r\n| extend pregmatchall=extract_all(@'duration:(.+)ms.+statement:(.+)', Message)\r\n| extend duration_ms=toreal(pregmatchall[0][0])\r\n| extend statement=trim(@' ',tostring(pregmatchall[0][1]))\r\n| distinct statement,duration_ms,TimeGenerated\r\n| where statement!=\"\"\r\n| order by duration_ms desc\r\n|limit 5\r\n| summarize count(), WindowStart=min(TimeGenerated), WindowEnd=max(TimeGenerated), meanExecTime=avg(duration_ms), minExecTime=min(duration_ms),maxExecTime=max(duration_ms) by statement\r\n| count\r\n| extend logsdata = iff((Count) >= 1 , \"Yes\", \"No\")\r\n| project logsdata",
            "crossComponentResources": [
              "{Resource}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          },
          {
            "id": "2e0dfa91-cfee-4238-a5d1-42c74eddabcb",
            "version": "KqlParameterItem/1.0",
            "name": "IsLogMinDurationStatementFilterDataExists",
            "type": 1,
            "query": "let TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{PGServerLogsTable}\r\n| where Category == \"PostgreSQLLogs\"\r\n| where TimeGenerated >= TimeStart and TimeGenerated <= TimeEnd\r\n| where Message contains \"duration:\"\r\n| extend Message1=replace_string(Message, \"\\n\", ' ')\r\n| extend pregmatchall=extract_all(@'user=(.+).+db=(.+).+app=(.+).+client=(.+)LOG.+duration:(.+)ms.+statement:(.+)', Message1)\r\n| extend user=tostring(pregmatchall[0][0])\r\n| extend db=trim(@' ',tostring(pregmatchall[0][1]))\r\n| extend app=tostring(pregmatchall[0][2])\r\n| extend client=trim(@' ',tostring(pregmatchall[0][3]))\r\n| extend duration_ms=toreal(pregmatchall[0][4])\r\n| extend statement=tostring(pregmatchall[0][5])\r\n| distinct user,db,app,client,statement,duration_ms,TimeGenerated,Message\r\n| where statement!=\"\" and user!in('azuresu','replication')\r\n| order by duration_ms desc\r\n| count\r\n| extend logsdata = iff((Count) >= 1 , \"Yes\", \"No\")\r\n| project logsdata",
            "crossComponentResources": [
              "{Resource}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.dbforpostgresql/flexibleservers"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.dbforpostgresql/flexibleservers"
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isEqualTo",
        "value": "y"
      },
      "name": "parameters - 18"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Long Running Sessions",
        "expandable": true,
        "expanded": true,
        "loadType": "explicit",
        "loadButtonText": "Show Long Running Sessions",
        "items": [
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 10"
          },
          {
            "type": 1,
            "content": {
              "json": "### No Long Running Sessions found in given Time Range",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "text - 56"
          },
          {
            "type": 1,
            "content": {
              "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "existsLongRunningSessionsData",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "LessThanOneHourInterval",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "text - 11"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "98d4f3a7-4057-400a-a84f-cbd61df98051",
                  "version": "KqlParameterItem/1.0",
                  "name": "TopQueries",
                  "type": 2,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n { \"value\":\"10\", \"label\":\"10\",\"selected\":true },\r\n  { \"value\":\"20\", \"label\":\"20\" },\r\n    { \"value\":\"30\", \"label\":\"30\" },\r\n     { \"value\":\"40\", \"label\":\"40\" },\r\n  { \"value\":\"50\", \"label\":\"50\" }\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "parameters - 40"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_sys','azure_maintenance')\r\n|  distinct TimeGenerated,Pid_d,Backend_start_t,Backend_type_s,State_s,Collection_time_t,Query_start_t,Xact_start_t\r\n| extend Connection_duration_sec = datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Backend_start_t)), Query_duration_ms = datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Query_start_t)),  Transaction_duration_ms=datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Xact_start_t))\r\n   | summarize Connection_duration_sec=max(Connection_duration_sec), Transaction_duration_ms=max(Transaction_duration_ms),  Query_duration_ms=max(Query_duration_ms),arg_max(TimeGenerated,lastState=State_s) by Pid_d,Backend_start_t, Backend_type_s\r\n  | order by Connection_duration_sec desc, Pid_d asc\r\n  | limit {TopQueries}",
              "size": 1,
              "aggregation": 2,
              "title": "Top {TopQueries} PIDs by connection duration. Blue - connection duration; Yellow - query duration. The state shown in the tile is the last state from telemetry snapshot, historically the sate could have changed multiple times",
              "noDataMessage": "No PIDs data was found for the selected time range. Select a wider time range",
              "queryType": 0,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers",
              "crossComponentResources": [
                "{Resource}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Pid_d",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "subtitleContent": {
                  "columnMatch": "lastState",
                  "formatter": 1,
                  "formatOptions": {
                    "compositeBarSettings": {
                      "labelText": "",
                      "columnSettings": []
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Connection_duration_sec",
                  "formatter": 3,
                  "formatOptions": {
                    "palette": "blue"
                  },
                  "numberFormat": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "{1}"
                  }
                },
                "rightContent": {
                  "columnMatch": "Query_duration_ms",
                  "formatter": 3,
                  "formatOptions": {
                    "palette": "yellow"
                  },
                  "numberFormat": {
                    "unit": 23,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  },
                  "tooltipFormat": {
                    "tooltip": "Query Duration"
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Backend_type_s",
                  "formatter": 1
                },
                "showBorder": true,
                "sortCriteriaField": "Connection_duration_sec",
                "sortOrderField": 2,
                "size": "auto"
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Session_duration",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Pid",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true,
                "xSettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true
                    }
                  }
                },
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 24,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                }
              }
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - Long Running Transactions "
          },
          {
            "type": 1,
            "content": {
              "json": "## Stats on long running sessions\r\n\r\nConsideration\r\n\r\n* Connection Duration **(blue)** - Duration of session or connection (collection_time-backend_start). You will notice higher value in case if you are using conneciton pool.\r\n* Query Duration **(yellow)** - Duration of query (collection_time-query_start). This should be in expected range of query execution time.\r\n\r\nLong running sessions are based out of pg_stat_activity view in postgresql. If you want to know more about these columns, please visit https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 24"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Resource}"
              ],
              "parameters": [
                {
                  "id": "e4b37b70-1891-4de7-b916-349a7ad5ae25",
                  "version": "KqlParameterItem/1.0",
                  "name": "SessionPid",
                  "label": "Show Snapshot of PID",
                  "type": 2,
                  "isRequired": true,
                  "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_sys','azure_maintenance')\r\n| extend Connection_duration_sec = datetime_diff('Millisecond',todatetime(Collection_time_t),todatetime(Backend_start_t))\r\n| summarize  Connection_duration_sec=max(Connection_duration_sec)  by Pid_d,Backend_start_t\r\n| order by Connection_duration_sec desc, Pid_d asc\r\n| limit {TopQueries}\r\n| extend uniquePidkeys=strcat(toint(Pid_d),'-',Backend_start_t)\r\n| project uniquePidkeys,Pid_d\r\n| serialize Rank = row_number()\r\n| project value = uniquePidkeys, label = strcat('🌐 ', toint(Pid_d)), selected = iff(Rank == 1, true, false)",
                  "crossComponentResources": [
                    "{Resource}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.dbforpostgresql/flexibleservers"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers"
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "parameters - 41"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n|  distinct TimeGenerated,Pid_d,Backend_start_t,Backend_type_s,State_s,Collection_time_t,Query_start_t,Xact_start_t,State_change_t,Datid_d,Database_name_s,Usesysid_d,Client_addr_s\r\n| extend uniquePidkeys=strcat(toint(Pid_d),'-',Backend_start_t)\r\n| where uniquePidkeys =='{SessionPid}'\r\n| extend Connection_Duration=iff(todatetime(Collection_time_t)-todatetime(Backend_start_t)<time(00:00:00.00),0, datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Backend_start_t)))\r\n| extend StateLastChanged_ms=iff(todatetime(Collection_time_t)-todatetime(State_change_t)<time(00:00:00.00),0, datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(State_change_t)))\r\n| extend Xact_duration_ms=iff(todatetime(Collection_time_t)-todatetime(Xact_start_t)<time(00:00:00.00), datetime_diff('millisecond',todatetime(Xact_start_t),todatetime(Collection_time_t)), datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Xact_start_t)))\r\n| extend Query_duration_ms=iff(todatetime(Collection_time_t)-todatetime(Query_start_t)<time(00:00:00.00),datetime_diff('millisecond',todatetime(Xact_start_t),todatetime(Collection_time_t)), datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Query_start_t)))\r\n| extend dummy_row=1\r\n| summarize max(Connection_Duration), max(Query_duration_ms), max(Xact_duration_ms),sum(dummy_row)  by Pid_d,Backend_start_t, Datid_d, Database_name_s, Usesysid_d, Client_addr_s, Backend_type_s\r\n| project Pid_d,Backend_type_s, Datid_d, Database_name_s, Usesysid_d, Client_addr_s,Backend_start_t,TotalConnectionDuration=max_Connection_Duration, LongestTransactionDuration=max_Xact_duration_ms,LongestQueryDuration=max_Query_duration_ms, SampledDatapointsCounter=sum_dummy_row",
              "size": 4,
              "title": "Summary as Of Time - {GlobalEndTime} UTC",
              "noDataMessage": "No PIDs data was found for the selected time range. Select a wider time range",
              "queryType": 0,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers",
              "crossComponentResources": [
                "{Resource}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Backend_start",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "TotalConnectionDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "LongestTransactionDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "LongestQueryDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - 44"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_sys','azure_maintenance')\r\n| distinct TimeGenerated, Pid_d, Backend_start_t,State_s\r\n    | extend uniquePidkeys=strcat(toint(Pid_d),'-',Backend_start_t)\r\n    | where uniquePidkeys =='{SessionPid}'\r\n| extend workingState=iff(State_s in ('active','idle','idle in transaction','idle in transaction (aborted)'),State_s,'Other')\r\n| summarize count() by State=workingState",
              "size": 4,
              "title": "Overall State of the PID for the period. Data is sampled each 5 minutes",
              "queryType": 0,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers",
              "crossComponentResources": [
                "{Resource}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Backend_start",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "TotalConnectionDuration",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "LongestTransactionDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "LongestQueryDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Pid",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "Backend_start",
                  "formatter": 6,
                  "dateFormat": {
                    "showUtcTime": null,
                    "formatName": "fullDateTimePattern"
                  }
                },
                "leftContent": {
                  "columnMatch": "Database_name",
                  "formatter": 1
                },
                "showBorder": false
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Backend_start",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Pid",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - 44 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_sys','azure_maintenance')\r\n| distinct TimeGenerated, Pid_d, Backend_start_t,State_s,Wait_event_type_s,Wait_event_s\r\n    | extend uniquePidkeys=strcat(toint(Pid_d),'-',Backend_start_t)\r\n    | where uniquePidkeys =='{SessionPid}'\r\n|  summarize count() by Wait_event_type_s,Wait_event_s\r\n|project iff(isempty(Wait_event_type_s),'No Waits',strcat(Wait_event_type_s,':',Wait_event_s)),count_",
              "size": 4,
              "title": "Overall wait events of the PID for the period. Data is sampled each 5 minutes",
              "queryType": 0,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers",
              "crossComponentResources": [
                "{Resource}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Backend_start",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "TotalConnectionDuration",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "LongestTransactionDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "LongestQueryDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Pid",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "Backend_start",
                  "formatter": 6,
                  "dateFormat": {
                    "showUtcTime": null,
                    "formatName": "fullDateTimePattern"
                  }
                },
                "leftContent": {
                  "columnMatch": "Database_name",
                  "formatter": 1
                },
                "showBorder": false
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Backend_start",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Pid",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - 44 - Copy - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": " \r\nlet Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_sys','azure_maintenance')\r\n| distinct TimeGenerated,Pid_d, Collection_time_t, Application_name_s , State_s, Wait_event_type_s , Wait_event_s , Backend_xid_d , Backend_xmin_d,Backend_start_t,State_change_t,Xact_start_t,Query_start_t\r\n    | extend uniquePidkeys=strcat(toint(Pid_d),'-',Backend_start_t)\r\n    | where uniquePidkeys =='{SessionPid}'\r\n| extend Connection_Duration=iff(todatetime(Collection_time_t)-todatetime(Backend_start_t)<time(00:00:00.00),datetime_diff('second',todatetime(Backend_start_t),todatetime(Collection_time_t)), datetime_diff('second',todatetime(Collection_time_t),todatetime(Backend_start_t)))\r\n| extend StateLastChanged_ms=iff(todatetime(Collection_time_t)-todatetime(State_change_t)<time(00:00:00.00),datetime_diff('millisecond',todatetime(State_change_t),todatetime(Collection_time_t)), datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(State_change_t)))\r\n| extend Xact_duration_ms=iff(todatetime(Collection_time_t)-todatetime(Xact_start_t)<time(00:00:00.00),datetime_diff('millisecond',todatetime(Xact_start_t),todatetime(Collection_time_t)), datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Xact_start_t)))\r\n| extend Query_duration_ms=iff(todatetime(Collection_time_t)-todatetime(Query_start_t)<time(00:00:00.00),datetime_diff('millisecond',todatetime(Query_start_t),todatetime(Collection_time_t)), datetime_diff('millisecond',todatetime(Collection_time_t),todatetime(Query_start_t)))\r\n| project Pid_d, Collection_time_t, Application_name_s , Connection_Duration,Query_duration_ms,Xact_duration_ms,StateLastChanged_ms, State_s, Wait_event_type_s , Wait_event_s , Backend_xid_d , Backend_xmin_d \r\n| order by Connection_Duration asc \r\n| serialize \r\n| extend rn=row_number()\r\n| extend prev_Application=(prev(Application_name_s,1))\r\n| extend prev_State=(prev(State_s,1))\r\n| extend prev_Waitevtype=(prev(Wait_event_type_s,1))\r\n| extend prev_Waitev=(prev(Wait_event_s,1))\r\n| extend prev_xid=(prev(Backend_xid_d,1))\r\n| extend prev_xmin=(prev(Backend_xmin_d,1))\r\n| extend isApp_change=iff( rn>1 and Application_name_s != prev_Application,1,0)\r\n| extend isState_change=iff( rn>1 and State_s != prev_State,1,0)\r\n| extend isWaitevtype_change=iff( rn>1 and Wait_event_type_s != prev_Waitevtype,1,0)\r\n| extend isWaitev_change=iff( rn>1 and Wait_event_s != prev_Waitev,1,0)\r\n| extend isxid_change=iff( rn>1 and Backend_xid_d != prev_xid,1,0)\r\n| extend isxmin_change=iff( rn>1 and Backend_xmin_d != prev_xmin,1,0)\r\n| extend breakPoint=iff (isApp_change>0 or isState_change>0 or isWaitevtype_change>0 or isWaitev_change>0 or isxid_change>0 or isxmin_change>0, 0, rn)\r\n| project Collection_time_t,Pid_d,Application_name_s,Connection_Duration, State_s, prev_State, Wait_event_s, prev_Waitev, Wait_event_type_s, prev_Waitevtype, rn, breakPoint,Backend_xid_d , Backend_xmin_d,Xact_duration_ms,StateLastChanged_ms\r\n| scan with_match_id=change_id declare (TheRank: long) with \r\n(\r\n    step buildRank: true => TheRank = iff(isnull(buildRank.TheRank), rn, buildRank.TheRank);\r\n    step endRank output=none: breakPoint==0;\r\n)\r\n| summarize min(Connection_Duration),max(Connection_Duration),min(Collection_time_t),max(Collection_time_t), SampledCounter=count(), max(Xact_duration_ms), avg(Xact_duration_ms), max(StateLastChanged_ms)  by change_id, Application_name_s, State_s,Wait_event_s,Wait_event_type_s,Pid_d, Backend_xid_d , Backend_xmin_d\r\n| extend WaitEvent=iff(isempty(Wait_event_type_s),'No Waits',strcat(Wait_event_type_s,':',Wait_event_s))\r\n| project Pid_d, FromTime=min_Collection_time_t, ToTime=max_Collection_time_t, \r\nFromConnectionStart=min_Connection_Duration,//, EndFromConnectionStart=max_Connection_Duration, \r\nApplication_name_s, State_s,WaitEvent,Backend_xid_d, Backend_xmin_d,MaxTransactionTime=max_Xact_duration_ms,AvgTransactionTime=iff(isnan(avg_Xact_duration_ms ),'',tostring(toint(avg_Xact_duration_ms))),//MaxLastStateChanged=max_StateLastChanged_ms\r\n SampledCounter",
              "size": 0,
              "title": "Full history of the PID for the selected TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.dbforpostgresql/flexibleservers",
              "crossComponentResources": [
                "{Resource}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "FromTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "ToTime",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "FromConnectionStart",
                    "formatter": 19,
                    "formatOptions": {
                      "palette": "blue",
                      "timelineSettings": {
                        "timelineStartColumn": "FromConnectionStart"
                      }
                    },
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "MaxTransactionTime",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "AvgTransactionTime",
                    "formatter": 1,
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "FromConnectionDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "ToConnectionDuration",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 24,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Backend_start",
                    "formatter": 6
                  }
                ],
                "rowLimit": 1000
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "existsLongRunningSessionsData",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "query - 44 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "**Recommendations**\r\n\r\n* As a long term approach consider tuning queries identified from the above PIDs using explain analyze.\r\nMore information on EXPLAIN command can be found here\r\n\r\n\r\n* As a short term option you can terminate or cancel the sessions by executing below commands:\r\n\r\nFrom the PIDs retrieved above execute the below query on the server to terminate the session:\r\n\r\n\tSELECT pg_terminate_backend(<pid>);\r\n\r\nYou could also cancel the running queries by executing the below query:\r\n\r\n\tSelect pg_cancel_backend(<pid>); \r\n\r\n* Sessions that run for a prolonged period of time can use up a significant amount of memory. Therefore, it is recommended to configure the server parameters such as `statement_timeout` (in PG14, `idle_session_timeout`) or `idle_in_transaction_session_timeout` to terminate such long running sessions. This will prevent unnecessary consumption of system resources and help maintain server performance.\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "isQueryTimeHigh",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 25"
          }
        ],
        "exportParameters": true
      },
      "name": "Long Running Sessions",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Top Memory Consuming Queries  From Query Store",
        "expandable": true,
        "expanded": true,
        "loadType": "explicit",
        "loadButtonText": "Show Top Memory Consuming Queries From Query Store",
        "items": [
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 12"
          },
          {
            "type": 1,
            "content": {
              "json": "### Query Store has no data in the selected Time Range.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "HighMemoryQueries",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "text - 60"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "98d4f3a7-4057-400a-a84f-cbd61df98051",
                        "version": "KqlParameterItem/1.0",
                        "name": "TopTimeConsumingQueries",
                        "label": "Max Count",
                        "type": 2,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n { \"value\":\"5\", \"label\":\"5\",\"selected\":true },\r\n  { \"value\":\"10\", \"label\":\"10\" },\r\n    { \"value\":\"20\", \"label\":\"20\" }\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "parameters - 49"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
                    "style": "warning"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "LessThanOneHourInterval",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 59 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let graphgrain=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\nlet TopQueryIDs = \r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| where Userid_d != 10 // exclude azure super user \r\n|extend Mean_memory_blks=(Shared_blks_hit_d + Shared_blks_dirtied_d)/Calls_d\r\n| summarize Max_blks = max(Mean_memory_blks) by Queryid_d, Resource \r\n| where Max_blks>0\r\n| top {TopTimeConsumingQueries} by Max_blks desc\r\n| project Queryid_d;\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd            \r\n| where Queryid_d in (TopQueryIDs)\r\n|extend Mean_memory_blks=(Shared_blks_hit_d + Shared_blks_dirtied_d)/Calls_d\r\n| extend  EVENT_TIME_GRAPHGRAIN = bin(todatetime(End_time_t), 1m)\r\n| make-series maxmemorytime=max(Mean_memory_blks*8) default=0 on EVENT_TIME_GRAPHGRAIN from TimeStart to TimeEnd step graphgrain by Queryid_d=strcat('QueryId ',tolong(Queryid_d))",
                    "size": 0,
                    "aggregation": 2,
                    "title": "Top {TopTimeConsumingQueries} Memory Consuming Queries. Data is plotted at a granularity of {ChartGrain}",
                    "noDataMessage": "No data found in given time range",
                    "noDataMessageStyle": 4,
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "areachart",
                    "chartSettings": {
                      "showLegend": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 3,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "query - 18"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Shown above are the top {TopTimeConsumingQueries} memory consuming queries for the selected timerange. ** \r\n\r\nThese queries have the largest sum of shared_blks_hit and shared_blks_dirtied in the selected timerange\r\n\r\n*The counter indicates how much memory was pinned through the execution process, it could be that a page from the memory was pinned multiple times, hence the total memory touched by the given query can be multiple times higher than the shared_buffers itself.*",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 38"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "parameters": [
                      {
                        "id": "98d4f3a7-4057-400a-a84f-cbd61df98051",
                        "version": "KqlParameterItem/1.0",
                        "name": "QueryIdsByTime",
                        "label": "QueryId Snapshot",
                        "type": 2,
                        "isRequired": true,
                        "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= Start_Time and todatetime(End_time_t) <= End_Time\r\n| where Userid_d != 10 // exclude azure super user \r\n| extend Mean_memory_blks=(Shared_blks_hit_d + Shared_blks_dirtied_d)/Calls_d\r\n| summarize Max_blks = max(Mean_memory_blks) by Queryid_d\r\n| where Max_blks>0\r\n| top {TopTimeConsumingQueries} by Max_blks desc\r\n| serialize Rank = row_number()\r\n| project value = Queryid_d, label = Queryid_d, selected = iff(Rank == 1, true, false)",
                        "crossComponentResources": [
                          "{Resource}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.dbforpostgresql/flexibleservers"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "parameters - 40"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n| where Userid_d != 10 // exclude azure super user \r\n| where Queryid_d == {QueryIdsByTime}\r\n| distinct Mean_time_d,Max_time_d,Min_time_d,Calls_d,Queryid_d,Query_type_s \r\n| summarize AvgExecutionTime=avg(Mean_time_d),MaxExecutionTime=max(Max_time_d), MinExecutionTime=min(Min_time_d), TotalCalls=sum(Calls_d) by Queryid_d,Query_type_s",
                    "size": 4,
                    "title": "QueryID {QueryIdsByTime} summary in selected TimeRange",
                    "noDataMessage": "No data available during the period selected",
                    "noDataMessageStyle": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Queryid",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Query_type",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "AvgExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MinExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Calls",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "green"
                          }
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "query - 33"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let graphgrain=iff({TimeRange:grain}<15m,15m, {TimeRange:grain});\r\nlet TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{QueryStoreTable}\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n    | where todatetime(End_time_t) >= TimeStart and todatetime(End_time_t) <= TimeEnd\r\n    | where Userid_d != 10 // exclude azure super user \r\n    | where Queryid_d == {QueryIdsByTime}\r\n    | extend Total_Memory_blks_hit=(Shared_blks_hit_d + Shared_blks_dirtied_d)*8\r\n    | extend Mean_Memory_blks_hit=Total_Memory_blks_hit/Calls_d    \r\n     | distinct Mean_time_d,Max_time_d,Min_time_d,Calls_d,Queryid_d,Query_type_s,Rows_d,Total_time_d,Start_time_t,End_time_t,Plan_id_d,Dbid_d,Userid_d,Shared_blks_hit_d,Shared_blks_dirtied_d,Mean_Memory_blks_hit,Total_Memory_blks_hit     \r\n    | summarize WindowStart=min(Start_time_t), WindowEnd=max(End_time_t),MeanRows=sum(Rows_d)/sum(Calls_d), MeanMemory=avg(Mean_Memory_blks_hit), MeanExecutionTime=avg(Mean_time_d), MinMemory=min(Mean_Memory_blks_hit),MaxMemory=max(Mean_Memory_blks_hit), TotalCalls=sum(Calls_d),TotalMemory=sum(Total_Memory_blks_hit), TotalRows=sum(Rows_d),MinExecutionTime=min(Min_time_d),MaxExecutionTime=max(Max_time_d),TotalExecutionTime=sum(Total_time_d) by bin(todatetime(End_time_t), graphgrain), Queryid_d,Plan_id_d,Dbid_d,Userid_d\r\n |order by WindowStart asc",
                    "size": 0,
                    "title": "QueryID {QueryIdsByTime} runtime statistics split by time buckets of {ChartGrain} each",
                    "noDataMessage": "No data available during the period selected",
                    "noDataMessageStyle": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "End_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Queryid",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Dbid",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "WindowStart",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "WindowEnd",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Rows",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "MeanMemory",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MeanExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MinMemory",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxMemory",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Calls",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "TotalMemory",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MinExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "TotalExecutionTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Start_time",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Query_type",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Shared_blks_dirtied",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Shared_blks_hit",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Memory_blks_hit",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "PreciseTimeStamp",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "memory_blks_hit",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Total_consumed_memory",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Total_blks",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Max_blks",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "green"
                          }
                        }
                      ],
                      "rowLimit": 500,
                      "sortBy": [
                        {
                          "itemKey": "$gen_heatmap_MeanMemory_8",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_heatmap_MeanMemory_8",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "query - 31 - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "** Shown above memory usage is deducted by the total blks_hit plus blks_dirtied for the given Queryid and TimeRange. **\r\n\r\n**MeanMemory**: The mean (average) memory manipulated by the queryid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n**MinMemory**: The minimum memory manipulated by the queryid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n**MaxMemory**: The maximum memory manipulated by the queryid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n**TotalMemory**: Total memory manipulated by the queryid in the time backet for all the calls in the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**MeanRows**: The mean (average) rows retrieved or affected by the querid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n**TotalRows**: Total rows retrieved or affected by the querid for all the calls in the time bucket defined between WindowStart and WindowEnd<br>\r\n\r\n**MeanExecutionTime**: The mean (average) execution time of the querid in a single call across the time bucket defined between WindowStart and WindowEnd<br>\r\n**MinExecutionTime**: The minimum execution time of the querid in a single call across the time bucket defined between WindowStart and WindowEnd <br>\r\n**MaxExecutionTime**: The maximum execution time of the querid in a single call across the time bucket defined between WindowStart and WindowEnd <br>\r\n**TotalExecutionTime**: The total execution time of the querid for all the calls in the time bucket defined between WindowStart and WindowEnd <br>\r\n\r\nNon performant queries or queries that consume too much memory may be ones which are consuming high memory on the server. They are good candidates to to further analyze and tune.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 29"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**How can you retrieve the Query Text for a specific Query ID?**\r\n\r\nTo retrieve the Query Text for a specific Query ID, you need to follow these steps:\r\n\r\n1. Connect to the server using the **`azure_sys`** database where QueryStore is installed. For example, you can use the following command:\r\n```SQL\r\npsql -h ServerName.postgres.database.azure.com -U AdminUsername -d azure_sys\r\n```\r\n\r\n2. Use the generated GetQueryText column to retrieve the Query Text associated with the Query ID.\r\n\r\nIt is important to note that the Query Store retention period applies when querying the database, and older data gets deleted based on the server parameter `pg_qs.retention_period_in_days`. However, our telemetry has a higher retention period.\r\n\r\n**To retrieve the query text for a given Query ID, use the following SQL:**",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 37"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\nAzureDiagnostics\r\n| where Category ==\"PostgreSQLFlexQueryStoreRuntime\"\r\n| where todatetime(End_time_t) >= Start_Time and todatetime(End_time_t) <= End_Time\r\n| where Userid_d != 10 // exclude azure super user \r\n| extend Mean_memory_blks=(Shared_blks_hit_d + Shared_blks_dirtied_d)/Calls_d\r\n| summarize Max_blks = max(Mean_memory_blks) by Queryid_d, Resource \r\n| where Max_blks>0\r\n| top {TopTimeConsumingQueries} by Max_blks desc\r\n    | extend GetQueryText = strcat(\"SELECT query_sql_text FROM query_store.query_texts_view WHERE query_text_id=\",tolong(Queryid_d),\";\")\r\n    | project GetQueryText ",
                    "size": 1,
                    "title": "Get query_text from QueryId",
                    "noDataMessage": "No data found in given time range",
                    "noDataMessageStyle": 4,
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "query - 35"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**To optimize queries that consume a lot of memory, follow these general recommendations:**\r\n\r\n- Use the explain analyze command to tune slow-running queries for better performance. You can find more information about the EXPLAIN command [here](https://www.postgresql.org/docs/current/sql-explain.html).\r\n\r\n- High bloat on tables can cause the optimizer to choose suboptimal plans. As a one-time solution, consider manually vacuum analyzing the tables used in slow-running queries using the following command on the database:\r\n```sql\r\nVACUUM (ANALYZE, VERBOSE) <Table Name>\r\n```\r\n- Review the use of indexes and joins in your queries. Consider creating indexes and reducing the number of joins in the query where applicable.\r\n\r\n- Review some of the server parameters and adjust them according to workload. These parameters include `shared_buffers`, `work_mem`, `maintenance_work_mem`, `max_locks_per_transaction`, and `max_parallel_workers_per_gather`. Keep in mind that setting some of these parameters to a high value may result in higher memory consumption.\r\n\r\n- Consider upgrading to a higher SKU or a memory-optimized SKU if the workload is more memory-intensive. This can help alleviate memory constraints and improve query performance.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "isQueryStoreEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "HighMemoryQueries",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 36 - Copy"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibilities": [
              {
                "parameterName": "isQueryStoreEnabled",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsQueryStoreRuntimeSentToLogAnalytics",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "HighMemoryQueries",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "QueryStore-Internal"
          },
          {
            "type": 1,
            "content": {
              "json": "### The Query Store's capabilities are not functioning on the replica server.\r\n#### After analysis, we have determined that this server is a replica server, which means that the query store functionality is not available. However, there are alternative methods you can use to monitor long-running sessions on the replica server.\r\n- ##### To help pinpoint possible performance issues, a recommended solution is to adjust the `log_min_duration_statement` parameter to the desired threshold and properly configure `log_line_prefix` to include the relevant details such as **%t-%c user=%u,db=%d,app=%a,client=%h**. This will enable the logging of slow queries in the PostgreSQL logs. By doing so, you can easily access the top queries and review the slow queries that may require optimization.\r\n- ##### Another option is to configure `pg_stat_statements`, which allows you to view information about your query performance on the replica server. However, Please keep in mind that you need to execute the `CREATE EXTENSION pg_stat_statements` command on the primary server database. For more informaiton, please visit [PostgreSQL Documentation](https://www.postgresql.org/docs/current/pgstatstatements.html).\r\n- ##### You can also monitor the ongoing workload on the replica server by using the `pg_stat_activity` catalog view.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "IsServerPrimaryCheck",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "text - 60 - Copy"
          }
        ],
        "exportParameters": true
      },
      "name": "Top Memory Consuming Queries ",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Top Queries by Duraiton from PostgreSQL Logs",
        "expandable": true,
        "expanded": true,
        "loadType": "explicit",
        "loadButtonText": "Top Queries by Duraiton from PostgreSQL Logs",
        "items": [
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": "### The `log_min_duration_statement` parameter has not tracked any queries within the selected time range or PostgreSQL server logs is not being transmitted to the log analytics workspace.\r\n\r\nIf `log_min_duration_statement` is inactive, queries that take less time to execute than the threshold will not be logged in the Postgres logs. To ensure that all queries are logged, set an appropriate threshold for `log_min_duration_statement` through the Azure portal.\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsLogMinDurationDataExists",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsLogLinePrefixSame",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "text - 2 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### The `log_min_duration_statement` parameter has not tracked any queries within the selected time range or PostgreSQL server logs is not being transmitted to the log analytics workspace.\r\n\r\nIf `log_min_duration_statement` is inactive, queries that take less time to execute than the threshold will not be logged in the Postgres logs. To ensure that all queries are logged, set an appropriate threshold for `log_min_duration_statement` through the Azure portal.\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsLogMinDurationStatementFilterDataExists",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsLogLinePrefixSame",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "text - 2 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### The `log_line_prefix` parameter is not set as per our instructions.\r\n\r\nOur instructions require the `log_line_prefix` parameter to be properly configured. If this parameter is not set correctly, we may encounter difficulties in filtering system queries and organizing queries by client, application, user, and database.\r\n\r\nPlease set the **log_line_prefix=%t-%c user=%u,db=%d,app=%a,client=%h** using Azure portal.\r\n\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "IsLogLinePrefixSame",
              "comparison": "isEqualTo",
              "value": "No"
            },
            "name": "text - 2 - Copy - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "LessThanOneHourInterval",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "01b074e9-75d8-473e-8013-865e55834d67",
                        "version": "KqlParameterItem/1.0",
                        "name": "MaxCount",
                        "label": " Max Count",
                        "type": 2,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n { \"value\":\"5\", \"label\":\"5\",\"selected\":true },\r\n  { \"value\":\"10\", \"label\":\"10\" },\r\n    { \"value\":\"20\", \"label\":\"20\" },\r\n\t{ \"value\":\"30\", \"label\":\"30\" },\r\n\t{ \"value\":\"40\", \"label\":\"40\" },\r\n\t{ \"value\":\"50\", \"label\":\"50\" }\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 8
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "IsLogMinDurationStatementEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "IsLogMinDurationDataExists",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "parameters - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{PGServerLogsTable}\r\n| where Category == \"PostgreSQLLogs\"\r\n| where TimeGenerated >= TimeStart and TimeGenerated <= TimeEnd\r\n| where Message contains \"duration:\"\r\n| extend Message1=replace_string(Message, \"\\n\", ' ')\r\n| extend pregmatchall=extract_all(@'duration:(.+)ms.+statement:(.+)', Message1)\r\n| extend duration_ms=toreal(pregmatchall[0][0])\r\n| extend statement=trim(@' ',tostring(pregmatchall[0][1]))\r\n| distinct statement,duration_ms,TimeGenerated\r\n| where statement!=\"\"\r\n| order by duration_ms desc\r\n| summarize count(), WindowStart=min(TimeGenerated), WindowEnd=max(TimeGenerated), meanExecTime=avg(duration_ms), minExecTime=min(duration_ms),maxExecTime=max(duration_ms) by statement\r\n| order by meanExecTime desc\r\n| limit {MaxCount}",
                    "size": 0,
                    "title": "Top {MaxCount} Quries by Duration",
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "count_",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "WindowStart",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "WindowEnd",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "meanExecTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "minExecTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "maxExecTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "IsLogMinDurationStatementEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsLogMinDurationDataExists",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "query - 4"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsLogMinDurationStatementEnabled",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsLogMinDurationDataExists",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsLogLinePrefixSame",
                "comparison": "isEqualTo",
                "value": "No"
              }
            ],
            "name": "ReadQueriesWithoutLogLine"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
                    "style": "warning"
                  },
                  "conditionalVisibility": {
                    "parameterName": "LessThanOneHourInterval",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "01b074e9-75d8-473e-8013-865e55834d67",
                        "version": "KqlParameterItem/1.0",
                        "name": "MaxCount",
                        "label": " Max Count",
                        "type": 2,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n { \"value\":\"5\", \"label\":\"5\",\"selected\":true },\r\n  { \"value\":\"10\", \"label\":\"10\" },\r\n    { \"value\":\"20\", \"label\":\"20\" },\r\n\t{ \"value\":\"30\", \"label\":\"30\" },\r\n\t{ \"value\":\"40\", \"label\":\"40\" },\r\n\t{ \"value\":\"50\", \"label\":\"50\" }\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 8
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "IsLogMinDurationStatementEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "IsLogMinDurationDataExists",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "parameters - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TimeStart = todatetime('{GlobalStartTime}');\r\nlet TimeEnd = todatetime('{GlobalEndTime}');\r\n{PGServerLogsTable}\r\n| where Category == \"PostgreSQLLogs\"\r\n| where TimeGenerated >= TimeStart and TimeGenerated <= TimeEnd\r\n| where Message contains \"duration:\"\r\n| extend Message1=replace_string(Message, \"\\n\", ' ')\r\n| extend pregmatchall=extract_all(@'user=(.+).+db=(.+).+app=(.+).+client=(.+)LOG.+duration:(.+)ms.+statement:(.+)', Message1)\r\n| extend user=tostring(pregmatchall[0][0])\r\n| extend db=trim(@' ',tostring(pregmatchall[0][1]))\r\n| extend app=tostring(pregmatchall[0][2])\r\n| extend client=trim(@' ',tostring(pregmatchall[0][3]))\r\n| extend duration_ms=toreal(pregmatchall[0][4])\r\n| extend statement=tostring(pregmatchall[0][5])\r\n| distinct user,db,app,client,statement,duration_ms,TimeGenerated,Message\r\n| where statement!=\"\" and user!in('azuresu','replication')\r\n| order by duration_ms desc\r\n| summarize count(), WindowStart=min(TimeGenerated), WindowEnd=max(TimeGenerated), meanExecTime=avg(duration_ms), minExecTime=min(duration_ms),maxExecTime=max(duration_ms) by statement,client,app,db,user\r\n| order by meanExecTime desc\r\n| limit {MaxCount}\r\n\r\n\r\n\r\n\r\n",
                    "size": 0,
                    "title": "Top {MaxCount} Quries by Duration",
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "count_",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "WindowStart",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "WindowEnd",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "meanExecTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "minExecTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "maxExecTime",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "IsServerPrimaryCheck",
                      "comparison": "isEqualTo",
                      "value": "No"
                    },
                    {
                      "parameterName": "IsLogMinDurationStatementEnabled",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsLogMinDurationStatementFilterDataExists",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsLogLinePrefixSame",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "query - 4 - Copy"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "IsLogMinDurationStatementEnabled",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsServerPrimaryCheck",
                "comparison": "isEqualTo",
                "value": "No"
              },
              {
                "parameterName": "IsLogMinDurationStatementFilterDataExists",
                "comparison": "isEqualTo",
                "value": "Yes"
              },
              {
                "parameterName": "IsLogLinePrefixSame",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "ReadQueriesWithoutLogLine - Copy"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "x",
        "comparison": "isEqualTo",
        "value": "y"
      },
      "name": "QueriesFromPGLogs",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Total User Only Connections",
        "expandable": true,
        "expanded": true,
        "loadType": "explicit",
        "loadButtonText": "Show Total User Only Connections",
        "items": [
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 6"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ce889247-43cd-4b4b-affb-b0753d5173ee",
                  "cellValue": "conn-tab",
                  "linkTarget": "parameter",
                  "linkLabel": "ConnectionByState",
                  "subTarget": "state",
                  "style": "link"
                },
                {
                  "id": "cb78e5e9-2ef1-4f4c-832f-6ddc98ae5c6f",
                  "cellValue": "conn-tab",
                  "linkTarget": "parameter",
                  "linkLabel": "ConnectionsByDuration",
                  "subTarget": "duration",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "IsConnectionDataExists",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "links - 21"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
                    "style": "warning"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "LessThanOneHourInterval",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsConnectionDataExists",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 60"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### There is no connecitons data found in given Time Range",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "IsConnectionDataExists",
                    "comparison": "isEqualTo",
                    "value": "No"
                  },
                  "name": "NoConnDataWarning"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let graph_grain=iff({TimeRange:grain}<5m,5m, {TimeRange:grain});\r\nlet Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{SessionsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category ==\"PostgreSQLFlexSessions\"\r\n| where Usesysid_d != 10\r\n| where isnotempty(Datid_d) and Database_name_s !in('azure_maintenance','azure_sys')\r\n| where State_s !=\"\"\r\n|distinct TimeGenerated,Backend_start_t,Pid_d,State_s\r\n|summarize count_state=count() by bin(TimeGenerated,1m),State_s\r\n| make-series max_count= max(count_state) on TimeGenerated from Start_Time to End_Time step graph_grain by State_s",
                    "size": 0,
                    "aggregation": 2,
                    "showAnnotations": true,
                    "title": "Total Connection summary by State. Data is plotted at a granularity of {ChartGrainMin5}",
                    "noDataMessage": "No data found in given time range",
                    "noDataMessageStyle": 4,
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "showLegend": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "IsConnectionDataExists",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "query - 2"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "conn-tab",
              "comparison": "isEqualTo",
              "value": "state"
            },
            "name": "State"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "This chart shows the count of short connections (less than 1 second), normal connections (between 1 second and 20 minutes), and long connections (greater than 20 minutes), which were calculated using disconnection messages extracted from PostgreSQL logs.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "IsPostgreSQLServerLogsDataExists",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 5"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "**Selected interval is too small. A one hour capture from the selected End Time is being shown.**",
                    "style": "warning"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "LessThanOneHourInterval",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    },
                    {
                      "parameterName": "IsPostgreSQLServerLogsDataExists",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "text - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### During the specified time range, no messages were identified in the PostgreSQL logs.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "IsPostgreSQLServerLogsDataExists",
                    "comparison": "isEqualTo",
                    "value": "No"
                  },
                  "name": "DisconnectionNote"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let Start_Time = todatetime('{GlobalStartTime}');\r\nlet End_Time = todatetime('{GlobalEndTime}');\r\n{PGServerLogsTable}\r\n| where TimeGenerated >= Start_Time and TimeGenerated <= End_Time\r\n| where Category == \"PostgreSQLLogs\"\r\n| where Message contains \"disconnection\"\r\n| distinct TimeGenerated,timestamp_s,Message\r\n| extend DisconnectTime=todatetime(timestamp_s)\r\n| extend allmatches=extract_all(@'session.time:(.+)user=(.+)database=(.+)host=(.+).port', Message)\r\n| extend duration=totime(allmatches[0][0])\r\n| extend user=trim(@\" \",tostring(allmatches[0][1]) )\r\n| extend database=tostring(allmatches[0][2])\r\n| extend IP=tostring(allmatches[0][3])\r\n| where  user !in ('azuresu','replication')\r\n| extend ts = totimespan(duration)\r\n| extend DurationInSeconds = ts / 1s\r\n| extend ConnType=iff(    DurationInSeconds <= 60, 'Short-Lived Connection' ,     iff(DurationInSeconds > 60 and DurationInSeconds < 1200, 'Normal-Lived Connection','Long-Lived Connection'))\r\n| make-series Connections=count() default=0 on DisconnectTime from Start_Time to End_Time step {TimeRange:grain} by ConnType\r\n",
                    "size": 0,
                    "aggregation": 2,
                    "title": "Connections summary by duration",
                    "noDataMessage": "No data found in given time range",
                    "noDataMessageStyle": 4,
                    "timeBrushParameterName": "TimeRange",
                    "timeBrushExportOnlyWhenBrushed": true,
                    "queryType": 0,
                    "resourceType": "microsoft.dbforpostgresql/flexibleservers",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "linechart",
                    "chartSettings": {
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Long-Lived Connection",
                          "color": "blueDark"
                        },
                        {
                          "seriesName": "Normal-Lived Connection",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Short-Lived Connection",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "IsPostgreSQLServerLogsDataExists",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "query - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "conn-tab",
              "comparison": "isEqualTo",
              "value": "duration"
            },
            "name": "Conn-Duration"
          },
          {
            "type": 1,
            "content": {
              "json": "### **Dealing with High Number of Connections**\r\n\r\nIf you are experiencing a high number of connections on your PostgreSQL database, consider following these recommendations:\r\n\r\n\r\n#### **Adjusting Server Parameters**\r\n\r\nSet the `statement_timeout`, `idle_in_transaction_session_timeout` and `idle_session_timeout`(starting from PG14) server parameters to appropriate values. These can help manage connections and prevent idle connections from consuming resources.\r\n\r\nFor more best practices on connection handling, refer to this resource: [Best Practices](https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/connection-handling-best-practice-with-postgresql/ba-p/790883).\r\n\r\n#### **Consider Connection Pooling**\r\n\r\nIn situations where there are a lot of idle connections or connections that are consuming CPU resources, consider using a connection pooler like PgBouncer.\r\n\r\nFor more details on PgBouncer and how it works, check out this resource: [Connection Pooler](https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/not-all-postgres-connection-pooling-is-equal/ba-p/825717).\r\n\r\n##### **Setting Up PgBouncer**\r\n\r\nIf you're using Azure Database for Flexible Server, you can take advantage of PgBouncer as a built-in connection pooling solution. For more information on how to set it up, see this resource: [PgBouncer - Azure Database for PostgreSQL Flexible Server](https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/concepts-pgbouncer).\r\n\r\n##### **Recommended Settings for PgBouncer on Flexible Server**\r\n\r\n##### **Pool Mode:**\r\n- `Transaction` pool mode is generally considered to be the most suitable mode for higher TPS scenarios, as it provides a new connection for each transaction and releases the connection immediately after the transaction is complete. This approach can help reduce connection overhead and improve performance, especially for systems with a high number of short-lived transactions.\r\n- In `session` pool mode, a client is assigned a server connection for the entire duration of its connection, and the connection is returned to the pool when the client disconnects. This approach can help reduce the overhead of establishing new connections, which can be beneficial for systems with a high number of relatively long-lived connections. Also, This mode supports all PostgreSQL features.\r\n\r\n**Pool Size:** Tune the `default_pool_size` based on your workload. Note that the `default_pool_size` is per application/database.\r\n\r\n**Timeouts:** To ensure that idle connections are closed and long running queries are terminated, set the `server_idle_timeout` and `query_timeout` parameters according to your workload needs.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "IsConnectionDataExists",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 15 - Copy"
          }
        ],
        "exportParameters": true
      },
      "name": "TotalConnections",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}